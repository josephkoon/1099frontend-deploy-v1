{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar utils = require('./utils'); // Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\n\n\nfunction multipartDataGenerator(method, data, headers) {\n  var segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n  headers['Content-Type'] = 'multipart/form-data; boundary=' + segno;\n  var buffer = Buffer.alloc(0);\n\n  function push(l) {\n    var prevBuffer = buffer;\n    var newBuffer = l instanceof Buffer ? l : Buffer.from(l);\n    buffer = Buffer.alloc(prevBuffer.length + newBuffer.length + 2);\n    prevBuffer.copy(buffer);\n    newBuffer.copy(buffer, prevBuffer.length);\n    buffer.write('\\r\\n', buffer.length - 2);\n  }\n\n  function q(s) {\n    return '\"' + s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ') + '\"';\n  }\n\n  for (var k in utils.flattenAndStringify(data)) {\n    var v = data[k];\n    push('--' + segno);\n\n    if (v.hasOwnProperty('data')) {\n      push('Content-Disposition: form-data; name=' + q(k) + '; filename=' + q(v.name || 'blob'));\n      push('Content-Type: ' + (v.type || 'application/octet-stream'));\n      push('');\n      push(v.data);\n    } else {\n      push('Content-Disposition: form-data; name=' + q(k));\n      push('');\n      push(v);\n    }\n  }\n\n  push('--' + segno + '--');\n  return buffer;\n}\n\nmodule.exports = multipartDataGenerator;","map":null,"metadata":{},"sourceType":"script"}