{"ast":null,"code":"'use strict';\n\nvar StripeResource = require('../StripeResource');\n\nvar stripeMethod = StripeResource.method;\nmodule.exports = StripeResource.extend({\n  // Since path can either be `account` or `accounts`, support both through stripeMethod path\n  create: stripeMethod({\n    method: 'POST',\n    path: 'accounts'\n  }),\n  list: stripeMethod({\n    method: 'GET',\n    path: 'accounts',\n    methodType: 'list'\n  }),\n  update: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{id}',\n    urlParams: ['id']\n  }),\n  // Avoid 'delete' keyword in JS\n  del: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{id}',\n    urlParams: ['id']\n  }),\n  reject: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{id}/reject',\n    urlParams: ['id']\n  }),\n  retrieve: function retrieve(id) {\n    // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n    // old account ids and api keys. To request the account for an api key, send null as the id\n    if (typeof id === 'string') {\n      return stripeMethod({\n        method: 'GET',\n        path: 'accounts/{id}',\n        urlParams: ['id']\n      }).apply(this, arguments);\n    } else {\n      if (id === null || id === undefined) {\n        // Remove id as stripeMethod would complain of unexpected argument\n        [].shift.apply(arguments);\n      }\n\n      return stripeMethod({\n        method: 'GET',\n        path: 'account'\n      }).apply(this, arguments);\n    }\n  },\n\n  /**\n   * Accounts: External account methods\n   */\n  createExternalAccount: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/external_accounts',\n    urlParams: ['accountId']\n  }),\n  listExternalAccounts: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/external_accounts',\n    urlParams: ['accountId'],\n    methodType: 'list'\n  }),\n  retrieveExternalAccount: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/external_accounts/{externalAccountId}',\n    urlParams: ['accountId', 'externalAccountId']\n  }),\n  updateExternalAccount: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/external_accounts/{externalAccountId}',\n    urlParams: ['accountId', 'externalAccountId']\n  }),\n  deleteExternalAccount: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{accountId}/external_accounts/{externalAccountId}',\n    urlParams: ['accountId', 'externalAccountId']\n  }),\n\n  /**\n  * Accounts: LoginLink methods\n  */\n  createLoginLink: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/login_links',\n    urlParams: ['accountId']\n  }),\n\n  /**\n   * Accounts: Person methods\n   */\n  createPerson: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/persons',\n    urlParams: ['accountId']\n  }),\n  listPersons: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/persons',\n    urlParams: ['accountId'],\n    methodType: 'list'\n  }),\n  retrievePerson: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/persons/{personId}',\n    urlParams: ['accountId', 'personId']\n  }),\n  updatePerson: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/persons/{personId}',\n    urlParams: ['accountId', 'personId']\n  }),\n  deletePerson: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{accountId}/persons/{personId}',\n    urlParams: ['accountId', 'personId']\n  })\n});","map":null,"metadata":{},"sourceType":"script"}