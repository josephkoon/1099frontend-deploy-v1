{"ast":null,"code":"import store from '../store';\nimport { validateRecipient } from '../actions';\nexport default function recipientValidator() {\n  var recipientErrors = {\n    errCount: 0,\n    name: null,\n    tin: null,\n    street: null,\n    city: null,\n    state: null,\n    zipcode: null,\n    account: null\n  };\n  var recipient = store.getState().recipient;\n\n  if (!recipient.name) {\n    recipientErrors.name = 'Recipient name is required.';\n    recipientErrors.errCount++;\n  }\n\n  if (!recipient.tin) {\n    recipientErrors.tin = 'Recipient TIN is required.';\n    recipientErrors.errCount++;\n  } else if (recipient.tin.length !== 9) {\n    recipientErrors.tin = 'Recipient TIN is not valid.  Must be 9 digits.';\n    recipientErrors.errCount++;\n  }\n\n  if (!recipient.street) {\n    recipientErrors.street = 'Recipient street address is required.';\n    recipientErrors.errCount++;\n  }\n\n  if (!recipient.city) {\n    recipientErrors.city = 'Recipient city is required.';\n    recipientErrors.errCount++;\n  }\n\n  if (!recipient.zipcode) {\n    recipientErrors.zipcode = 'Recipient Zip code is required.';\n    recipientErrors.errCount++;\n  } else if (recipient.zipcode.length !== 5) {\n    recipientErrors.zipcode = 'Recipient Zip code is not valid.  Length must be 5 digits.';\n    recipientErrors.errCount++;\n  }\n\n  if (recipient.FATCA === 'on' && !recipient.account) {\n    recipientErrors.account = 'Recipient account is required if FATCA is checked.';\n    recipientErrors.errCount++;\n  } //console.log(recipientErrors);\n\n\n  store.dispatch(validateRecipient(recipientErrors));\n  return recipientErrors.errCount;\n}\n;","map":{"version":3,"sources":["/Users/josephkoon/Desktop/1099-complete/src/validate/recipientValidator.js"],"names":["store","validateRecipient","recipientValidator","recipientErrors","errCount","name","tin","street","city","state","zipcode","account","recipient","getState","length","FATCA","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAAQC,iBAAR,QAAgC,YAAhC;AAGA,eAAe,SAASC,kBAAT,GAA8B;AACzC,MAAMC,eAAe,GAAG;AACpBC,IAAAA,QAAQ,EAAE,CADU;AAEpBC,IAAAA,IAAI,EAAE,IAFc;AAGpBC,IAAAA,GAAG,EAAE,IAHe;AAIpBC,IAAAA,MAAM,EAAE,IAJY;AAKpBC,IAAAA,IAAI,EAAE,IALc;AAMpBC,IAAAA,KAAK,EAAE,IANa;AAOpBC,IAAAA,OAAO,EAAE,IAPW;AAQpBC,IAAAA,OAAO,EAAE;AARW,GAAxB;AAWA,MAAMC,SAAS,GAAGZ,KAAK,CAACa,QAAN,GAAiBD,SAAnC;;AAEA,MAAI,CAACA,SAAS,CAACP,IAAf,EAAqB;AACjBF,IAAAA,eAAe,CAACE,IAAhB,GAAuB,6BAAvB;AACAF,IAAAA,eAAe,CAACC,QAAhB;AACH;;AAED,MAAI,CAACQ,SAAS,CAACN,GAAf,EAAoB;AAChBH,IAAAA,eAAe,CAACG,GAAhB,GAAsB,4BAAtB;AACAH,IAAAA,eAAe,CAACC,QAAhB;AACH,GAHD,MAGO,IAAIQ,SAAS,CAACN,GAAV,CAAcQ,MAAd,KAAyB,CAA7B,EAAgC;AACnCX,IAAAA,eAAe,CAACG,GAAhB,GAAsB,gDAAtB;AACAH,IAAAA,eAAe,CAACC,QAAhB;AACH;;AAED,MAAI,CAACQ,SAAS,CAACL,MAAf,EAAwB;AACpBJ,IAAAA,eAAe,CAACI,MAAhB,GAAyB,uCAAzB;AACAJ,IAAAA,eAAe,CAACC,QAAhB;AACH;;AAED,MAAI,CAACQ,SAAS,CAACJ,IAAf,EAAsB;AAClBL,IAAAA,eAAe,CAACK,IAAhB,GAAuB,6BAAvB;AACAL,IAAAA,eAAe,CAACC,QAAhB;AACH;;AAED,MAAI,CAACQ,SAAS,CAACF,OAAf,EAAyB;AACrBP,IAAAA,eAAe,CAACO,OAAhB,GAA0B,iCAA1B;AACAP,IAAAA,eAAe,CAACC,QAAhB;AACH,GAHD,MAGO,IAAIQ,SAAS,CAACF,OAAV,CAAkBI,MAAlB,KAA6B,CAAjC,EAAoC;AACvCX,IAAAA,eAAe,CAACO,OAAhB,GAA0B,4DAA1B;AACAP,IAAAA,eAAe,CAACC,QAAhB;AACH;;AAED,MAAIQ,SAAS,CAACG,KAAV,KAAoB,IAApB,IAA4B,CAACH,SAAS,CAACD,OAA3C,EAAoD;AAChDR,IAAAA,eAAe,CAACQ,OAAhB,GAA0B,oDAA1B;AACAR,IAAAA,eAAe,CAACC,QAAhB;AACH,GAhDwC,CAkDzC;;;AACAJ,EAAAA,KAAK,CAACgB,QAAN,CAAef,iBAAiB,CAACE,eAAD,CAAhC;AACA,SAAOA,eAAe,CAACC,QAAvB;AACH;AAAA","sourcesContent":["import store from '../store';\nimport {validateRecipient} from '../actions';\n\n\nexport default function recipientValidator() {\n    const recipientErrors = {\n        errCount: 0,\n        name: null,\n        tin: null,\n        street: null,\n        city: null,\n        state: null,\n        zipcode: null,\n        account: null\n    }\n        \n    const recipient = store.getState().recipient;\n\n    if (!recipient.name) {\n        recipientErrors.name = 'Recipient name is required.';\n        recipientErrors.errCount++;\n    }\n\n    if (!recipient.tin) {\n        recipientErrors.tin = 'Recipient TIN is required.'\n        recipientErrors.errCount++;\n    } else if (recipient.tin.length !== 9) {\n        recipientErrors.tin = 'Recipient TIN is not valid.  Must be 9 digits.'\n        recipientErrors.errCount++;\n    }\n    \n    if (!recipient.street ) {\n        recipientErrors.street = 'Recipient street address is required.'\n        recipientErrors.errCount++;\n    }\n    \n    if (!recipient.city ) {\n        recipientErrors.city = 'Recipient city is required.'\n        recipientErrors.errCount++;\n    }\n    \n    if (!recipient.zipcode ) {\n        recipientErrors.zipcode = 'Recipient Zip code is required.'\n        recipientErrors.errCount++;\n    } else if (recipient.zipcode.length !== 5) {\n        recipientErrors.zipcode = 'Recipient Zip code is not valid.  Length must be 5 digits.'\n        recipientErrors.errCount++;\n    }\n\n    if (recipient.FATCA === 'on' && !recipient.account) {\n        recipientErrors.account = 'Recipient account is required if FATCA is checked.'\n        recipientErrors.errCount++;\n    }\n\n    //console.log(recipientErrors);\n    store.dispatch(validateRecipient(recipientErrors));\n    return recipientErrors.errCount;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}