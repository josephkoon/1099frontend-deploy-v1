{"ast":null,"code":"import _classCallCheck from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/josephkoon/Desktop/1099-complete/src/components/Form1099/GetRecipientInfo.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\nimport { FieldCheck3 } from './FieldCheck';\nimport { updateRecipient } from '../../actions';\nimport store from '../../store';\nimport recipientValidator from '../../validate/recipientValidator'; //function GetRecipientInfo() {\n\nvar GetRecipientInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GetRecipientInfo, _React$Component);\n\n  function GetRecipientInfo(_props) {\n    var _this;\n\n    _classCallCheck(this, GetRecipientInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetRecipientInfo).call(this, _props));\n\n    _this.renderToolTip = function (props) {\n      return React.createElement(ReactTooltip, {\n        className: \"tooltip-container\",\n        id: props.input,\n        place: \"right\",\n        type: \"dark\",\n        effect: \"solid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, props.tip);\n    };\n\n    _this.state = {\n      name: '',\n      nameError: '',\n      isTouchedName: false,\n      tin: '',\n      tinError: '',\n      isTouchedTin: false,\n      zipcode: '',\n      zipcodeError: '',\n      isTouchedZipcode: false,\n      street: '',\n      streetError: '',\n      isTouchedStreet: false,\n      city: '',\n      cityError: '',\n      isTouchedCity: false,\n      state: '',\n      stateError: '',\n      isTouchedState: false,\n      account_nbr: '',\n      account_nbrError: '',\n      isTouchedAccount_nbr: false,\n      FACTA: '',\n      FACTAError: '',\n      isTouchedFACTA: false\n    };\n    return _this;\n  }\n\n  _createClass(GetRecipientInfo, [{\n    key: \"handleNameBlur\",\n    value: function handleNameBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        name: value,\n        isTouchedName: true,\n        isValidName: value.length > 0\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleTINBlur\",\n    value: function handleTINBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        tin: value,\n        isTouchedTIN: true,\n        isValidTIN: value.length > 0\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleAddressBlur\",\n    value: function handleAddressBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        street: value,\n        isTouchedAddress: true,\n        isValidAddress: value.length > 3\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleZipBlur\",\n    value: function handleZipBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        zip: value,\n        isTouchedZip: true,\n        isValidZip: value.length > 0\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleAccountBlur\",\n    value: function handleAccountBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        account: value,\n        isTouchedAccount: true\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleFATCABlur\",\n    value: function handleFATCABlur(e) {\n      var value = e.target.value;\n      this.setState({\n        FATCA: value,\n        isTouchedFATCA: true\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleFieldChange\",\n    value: function handleFieldChange(e, fieldname) {\n      var _this2 = this;\n\n      var value = e.target.value;\n\n      switch (fieldname) {\n        case 'name':\n          this.setState({\n            name: value,\n            isTouchedName: true,\n            isValidName: value.length > 0\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          });\n          break;\n\n        case 'street':\n          this.setState({\n            street: value,\n            isTouchedAddress: true,\n            isValidAddress: value.length > 0\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          });\n          break;\n\n        case 'ein':\n          var ein = e.target.value;\n          ein.length === 9 ? this.setState({\n            isValidTIN: true\n          }) : this.setState({\n            isValidTIN: false\n          });\n          this.setState({\n            tin: ein,\n            isTouchedTIN: true\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          });\n          break;\n\n        case 'account':\n          this.setState({\n            account: value,\n            isTouchedAccount: true\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          });\n          break;\n\n        case 'FATCA':\n          this.setState({\n            FATCA: value,\n            isTouchedFATCA: true\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          });\n          break;\n\n        default:\n          ;\n      }\n    }\n  }, {\n    key: \"handleZipChange\",\n    value: function handleZipChange(e) {\n      var _this3 = this;\n\n      var zip = \"\";\n      zip = e.target.value;\n      this.setState({\n        isTouchedZip: false\n      });\n      var zipURL = \"http://ziptasticapi.com/\" + zip;\n\n      if (zip.length === 5) {\n        fetch(zipURL).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _this3.setState({\n            city: data.city,\n            state: data.state,\n            zipcode: zip,\n            isValidZip: true\n          }); // if (data.city === undefined) {\n          //     this.setState({isValidZip: false})\n          // }\n\n        }).then(function () {\n          _this3.props.updateRecipient(_this3.state);\n        });\n      } else {\n        this.setState({\n          isValidZip: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var nameColor = !this.state.isValidName || this.recipientErrors && this.recipientErrors.name ? {\n        border: '1px solid red'\n      } : null;\n      var einColor = !this.state.isValidTIN || this.recipientErrors && this.recipientErrors.tin ? {\n        border: '1px solid red'\n      } : null;\n      var addressColor = !this.state.isValidAddress || this.recipientErrors && this.recipientErrors.street ? {\n        border: '1px solid red'\n      } : null;\n      var zipColor = !this.state.isValidZip || this.recipientErrors && this.recipientErrors.zip ? {\n        border: '1px solid red'\n      } : null;\n      var accountColor = this.state.isRequiredAccount && !this.state.isValidAccount ? {\n        border: '1px solid red'\n      } : null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Recipient Information\")), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Recipient Name *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"RecipientName\",\n        required: true,\n        value: this.state.name,\n        style: nameColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"name\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleNameBlur(e);\n        },\n        \"data-for\": \"RecipientName\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"If the recipient is an individual enter the their first and last name.  If the recipient is a company, enter the company name.  This field is required.\",\n        input: \"RecipientName\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidName,\n        message: this.state.recipientErrors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Tax Identification Number * XXX-XX-XXXX\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: \"inputSSN\",\n        required: true,\n        value: this.state.tin,\n        style: einColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"ein\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleTINBlur(e);\n        },\n        \"data-for\": \"inputSSN\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the recipient's tax identification number.  For a company, use their EIN.  For an individual, use their SSN, ATIN or ITIN.  This field is required.\",\n        input: \"inputSSN\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidTIN,\n        message: this.state.recipientErrors.tin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Recipient Address *\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputRecipientAddress\",\n        required: true,\n        value: this.state.street,\n        style: addressColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, 'street');\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleAddressBlur(e);\n        },\n        \"data-for\": \"inputRecipientAddress\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the recipient's street address.  This field is required.\",\n        input: \"inputRecipientAddress\"\n      }))), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidAddress,\n        message: this.state.recipientErrors.street,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Recipient City\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputRecipientCity\",\n        value: this.state.city,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"form-row\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputRecipientState\",\n        value: this.state.state,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        class: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Zipcode *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"inputRecipientZip\",\n        className: \"form-control\",\n        style: zipColor,\n        onChange: function onChange(event) {\n          return _this4.handleZipChange(event);\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleZipBlur(e);\n        },\n        \"data-for\": \"inputRecipientZip\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the recipient's Zipcode.  Required.\",\n        input: \"inputRecipientZip\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidZip,\n        message: this.state.recipientErrors.zip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Account Number\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputRecipientAccount\",\n        style: accountColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"account\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleAccountBlur(e);\n        },\n        \"data-for\": \"inputRecipientAccount\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })), this.renderToolTip({\n        tip: \"Enter the recipient's account number.  This field is required if the FATCA checkbox is checked.\",\n        input: \"inputRecipientAccount\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidAccount,\n        message: this.state.recipientErrors.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"FATCA\"), React.createElement(\"div\", {\n        className: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        \"aria-label\": \"Checkbox for following text input\",\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"FATCA\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleFATCABlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))), React.createElement(\"input\", {\n        type: \"readonly\",\n        className: \"form-control\",\n        id: \"chkbxFATCA\",\n        \"data-for\": \"inputFATCA\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Foreign Account Tax Compliance Act.  Check the checkbox if you are a U.S. payer that is reporting per Chapter 4 of Regulations section 1.1471-4(d)(2)(iii)(A), or if you are a Foreign Financial Institution (FFI) reporting payments to a U.S. account.\",\n        input: \"inputFATCA\"\n      }))));\n    }\n  }]);\n\n  return GetRecipientInfo;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    recipient: state.recipient\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateRecipient: updateRecipient\n  }, dispatch);\n};\n\nGetRecipientInfo = connect(mapStateToProps, mapDispatchToProps)(GetRecipientInfo);\nexport default GetRecipientInfo;","map":{"version":3,"sources":["/Users/josephkoon/Desktop/1099-complete/src/components/Form1099/GetRecipientInfo.js"],"names":["React","bindActionCreators","connect","ReactTooltip","FieldCheck3","updateRecipient","store","recipientValidator","GetRecipientInfo","props","renderToolTip","input","tip","state","name","nameError","isTouchedName","tin","tinError","isTouchedTin","zipcode","zipcodeError","isTouchedZipcode","street","streetError","isTouchedStreet","city","cityError","isTouchedCity","stateError","isTouchedState","account_nbr","account_nbrError","isTouchedAccount_nbr","FACTA","FACTAError","isTouchedFACTA","e","value","target","setState","isValidName","length","isTouchedTIN","isValidTIN","isTouchedAddress","isValidAddress","zip","isTouchedZip","isValidZip","account","isTouchedAccount","FATCA","isTouchedFATCA","fieldname","ein","zipURL","fetch","then","response","json","data","nameColor","recipientErrors","border","einColor","addressColor","zipColor","accountColor","isRequiredAccount","isValidAccount","handleFieldChange","handleNameBlur","handleTINBlur","handleAddressBlur","event","handleZipChange","handleZipBlur","handleAccountBlur","handleFATCABlur","Component","mapStateToProps","recipient","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip'\n\nimport { FieldCheck3 } from './FieldCheck';\nimport { updateRecipient } from '../../actions';\n\nimport store from '../../store';\nimport recipientValidator from '../../validate/recipientValidator';\n\n\n//function GetRecipientInfo() {\nclass GetRecipientInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            name: '',\n            nameError:'',\n            isTouchedName: false,\n\n            tin: '',\n            tinError:'',\n            isTouchedTin: false,\n\n            zipcode: '',\n            zipcodeError:'',\n            isTouchedZipcode: false,\n\n            street: '',\n            streetError:'',\n            isTouchedStreet: false,\n\n            city: '',\n            cityError:'',\n            isTouchedCity: false,\n\n            state: '',\n            stateError:'',\n            isTouchedState: false,\n\n            account_nbr: '',\n            account_nbrError:'',\n            isTouchedAccount_nbr: false,\n\n            FACTA: '',\n            FACTAError:'',\n            isTouchedFACTA: false,\n        }\n\n\n    }\n\n\n\n\n\n\n    handleNameBlur(e) {\n        const value = e.target.value;   \n        this.setState({ name:value, isTouchedName:true, isValidName:(value.length > 0)});\n        recipientValidator();\n    };\n\n    handleTINBlur(e) {\n        const value = e.target.value;   \n        this.setState({ tin:value, isTouchedTIN:true, isValidTIN:(value.length > 0)});\n        recipientValidator();\n    };\n\n    handleAddressBlur(e) {\n        const value = e.target.value;   \n        this.setState({ street:value, isTouchedAddress:true, isValidAddress:(value.length > 3)});\n        recipientValidator();\n    };\n\n    handleZipBlur(e) {\n        const value = e.target.value;   \n        this.setState({ zip:value, isTouchedZip:true, isValidZip:(value.length > 0)});\n        recipientValidator();\n    };\n\n    handleAccountBlur(e) {\n        const value = e.target.value;   \n        this.setState({ account:value, isTouchedAccount:true });\n        recipientValidator();\n    };\n\n    handleFATCABlur(e) {\n        const value = e.target.value;   \n        this.setState({ FATCA:value, isTouchedFATCA:true });\n        recipientValidator();\n    };\n\n    handleFieldChange(e, fieldname) {\n        const value = e.target.value;     \n        switch(fieldname) {\n            case 'name': \n                this.setState({name:value, isTouchedName:true, isValidName:(value.length > 0)}, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                break;\n            case 'street': \n                this.setState({street:value, isTouchedAddress: true, isValidAddress:(value.length > 0)}, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                break;\n            case 'ein': \n                var ein = e.target.value;  \n                (ein.length === 9) ? this.setState({isValidTIN: true}) : this.setState({isValidTIN: false});\n                this.setState({ tin: ein, isTouchedTIN: true }, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                break;\n            case 'account': \n                this.setState({ account:value, isTouchedAccount: true }, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                break;\n            case 'FATCA': \n                this.setState({FATCA:value, isTouchedFATCA: true }, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                break;\n            default:;\n        }\n    }\n\n    handleZipChange(e) {\n        var zip = \"\";\n        zip = e.target.value;\n        this.setState({isTouchedZip: false});\n        var zipURL = \"http://ziptasticapi.com/\" + zip\n        if (zip.length === 5) {\n            fetch(zipURL)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ \n                    city: data.city,\n                    state: data.state,\n                    zipcode: zip,\n                    isValidZip: true\n                });\n                // if (data.city === undefined) {\n                //     this.setState({isValidZip: false})\n                // }\n            }).then( () => {\n                this.props.updateRecipient(this.state)\n            })\n        } else {\n            this.setState({isValidZip: false});\n        }\n    }\n    \n    renderToolTip = (props) => {\n        return(\n            <ReactTooltip className='tooltip-container' id={props.input} place=\"right\" type=\"dark\" effect=\"solid\">\n                 {props.tip}\n            </ReactTooltip>\n        )\n    };\n    \n\n        \n    render() {            \n        const nameColor = (!this.state.isValidName || (this.recipientErrors && this.recipientErrors.name)) ? {border:'1px solid red'} : null;\n        const einColor = (!this.state.isValidTIN || (this.recipientErrors && this.recipientErrors.tin)) ? {border:'1px solid red'} : null;\n        const addressColor = (!this.state.isValidAddress || (this.recipientErrors && this.recipientErrors.street)) ? {border:'1px solid red'} : null;\n        const zipColor = (!this.state.isValidZip || (this.recipientErrors && this.recipientErrors.zip)) ? {border:'1px solid red'} : null;\n        const accountColor = this.state.isRequiredAccount && !this.state.isValidAccount ? {border:'1px solid red'} : null;\n\n\n        return (\n        <div>\n            <div className=\"input-group\" align=\"left\">\n                <h4>Recipient Information</h4>\n            </div>\n\n\n            <div align=\"left\">\n                <label>Recipient Name *</label>\n                <div className=\"input-group\">\n                    <input type=\"text\" className=\"form-control\" id=\"RecipientName\" required\n                        value={this.state.name}\n                        style={nameColor}\n                        onChange={(e) => this.handleFieldChange(e, \"name\")} \n                        onBlur={(e) => this.handleNameBlur(e)}\n                        data-for='RecipientName' data-tip data-event='focus' data-event-off='blur'\n                    >\n                    </input>\n                    {this.renderToolTip( {tip:\"If the recipient is an individual enter the their first and last name.  If the recipient is a company, enter the company name.  This field is required.\", input: \"RecipientName\"} )}\n                </div>\n                <FieldCheck3 isValid={this.state.isValidName} message={this.state.recipientErrors.name} />\n            </div>\n\n\n            <div align=\"left\">\n                <label>Tax Identification Number * XXX-XX-XXXX</label>\n                <div className=\"input-group\">\n                      <input type=\"number\" className=\"form-control\" id=\"inputSSN\" required\n                        value={this.state.tin}\n                        style={einColor}\n                        onChange={(e) => this.handleFieldChange(e, \"ein\")} \n                        onBlur={(e) => this.handleTINBlur(e)}\n                        data-for='inputSSN' data-tip data-event='focus' data-event-off='blur'\n                      />\n                    {this.renderToolTip( {tip:\"Enter the recipient's tax identification number.  For a company, use their EIN.  For an individual, use their SSN, ATIN or ITIN.  This field is required.\", input: \"inputSSN\"} )}\n            \t</div>\n                <FieldCheck3 isValid={this.state.isValidTIN} message={this.state.recipientErrors.tin} />\n            </div>\n\n\n            <div align=\"left\">\n                <label>Recipient Address *</label>\n                <div className=\"form-group\" align=\"left\">\n    \t\t\t\t<div>\n    \t\t\t\t  <input type=\"text\" className=\"form-control\" id=\"inputRecipientAddress\" required\n                        value={this.state.street}\n                        style={addressColor}\n                        onChange={(e) => this.handleFieldChange(e, 'street')} \n                        onBlur={(e) => this.handleAddressBlur(e)}\n                        data-for='inputRecipientAddress' data-tip data-event='focus' data-event-off='blur'\n                      />\n                      {this.renderToolTip( {tip:\"Enter the recipient's street address.  This field is required.\", input: \"inputRecipientAddress\"} )}\n    \t\t\t\t</div>\n    \t\t\t</div>\n                <FieldCheck3 isValid={this.state.isValidAddress} message={this.state.recipientErrors.street} />\n            </div>\n\n\n            <div align=\"left\">\n                <label>Recipient City</label>\n                <div className=\"form-group\" align=\"left\">\n    \t\t\t\t<div>\n                      <input type=\"text\" className=\"form-control\" id=\"inputRecipientCity\" value={this.state.city} readOnly />\n    \t\t\t\t</div>\n    \t\t\t</div>\n            </div>\n\n\n            <div class=\"form-row\" align=\"left\">\n                <div class=\"col\">\n                    <label>State</label>\n                    <div className=\"input-group\" >\n                        <input type=\"text\" className=\"form-control\" id=\"inputRecipientState\" value={this.state.state} readOnly/>\n                    </div>\n                </div>\n                <div class=\"col\">\n                    <label>Zipcode *</label>\n                    <div className=\"input-group\" >\n                        <input type=\"number\" id=\"inputRecipientZip\" className=\"form-control\" \n                            style={zipColor}\n                            onChange={(event) => this.handleZipChange(event)} \n                            onBlur={(e) => this.handleZipBlur(e)}\n                            data-for='inputRecipientZip' data-tip data-event='focus' data-event-off='blur'\n                        />\n                        {this.renderToolTip( {tip:\"Enter the recipient's Zipcode.  Required.\", input: \"inputRecipientZip\"} )}\n                    </div>\n                    <FieldCheck3 isValid={this.state.isValidZip} message={this.state.recipientErrors.zip} />\n                </div>\n            </div>\n\n\n            <div align=\"left\">\n                <label>Account Number</label>\n                <div className=\"form-group\" align=\"left\">\n    \t\t\t\t<div>\n                      <input type=\"text\" className=\"form-control\" id=\"inputRecipientAccount\" \n                        style={accountColor}\n                        onChange={(e) => this.handleFieldChange(e, \"account\")} \n                        onBlur={(e) => this.handleAccountBlur(e)}\n                        data-for='inputRecipientAccount' data-tip data-event='focus' data-event-off='blur'\n                        />\n    \t\t\t\t</div>\n                    {this.renderToolTip( {tip:\"Enter the recipient's account number.  This field is required if the FATCA checkbox is checked.\", input: \"inputRecipientAccount\"} )}\n    \t\t\t</div>\n                <FieldCheck3 isValid={this.state.isValidAccount} message={this.state.recipientErrors.account} />\n            </div>\n\n\n            <div align=\"left\" >\n                <label>FATCA</label>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\">\n                            <input type=\"checkbox\" aria-label=\"Checkbox for following text input\"\n                                onChange={(e) => this.handleFieldChange(e, \"FATCA\")} \n                                onBlur={(e) => this.handleFATCABlur(e)}  \n                            />\n                        </div>\n                    </div>\n                    <input type=\"readonly\" className=\"form-control\" id=\"chkbxFATCA\"\n                        data-for='inputFATCA' data-tip data-event='focus' data-event-off='blur'\n                    />\n                    {this.renderToolTip( {tip:\"Foreign Account Tax Compliance Act.  Check the checkbox if you are a U.S. payer that is reporting per Chapter 4 of Regulations section 1.1471-4(d)(2)(iii)(A), or if you are a Foreign Financial Institution (FFI) reporting payments to a U.S. account.\", input: \"inputFATCA\"} )}\n                </div>\n            </div>\n\n\n        </div>\n    )}\n}\n\n\nfunction mapStateToProps(state) {\n    return{\n        recipient: state.recipient\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        updateRecipient: updateRecipient\n    }, dispatch )\n}\n\nGetRecipientInfo = connect(mapStateToProps, mapDispatchToProps)(GetRecipientInfo);\n\nexport default GetRecipientInfo;\n\n\n\n"]},"metadata":{},"sourceType":"module"}