{"ast":null,"code":"'use strict';\n\nvar StripeResource = require('../StripeResource');\n\nvar stripeMethod = StripeResource.method;\n\nvar utils = require('../utils');\n\nmodule.exports = StripeResource.extend({\n  path: 'invoices',\n  includeBasic: ['create', 'list', 'retrieve', 'update', 'del'],\n  finalizeInvoice: stripeMethod({\n    method: 'POST',\n    path: '{invoiceId}/finalize',\n    urlParams: ['invoiceId']\n  }),\n  markUncollectible: stripeMethod({\n    method: 'POST',\n    path: '{invoiceId}/mark_uncollectible',\n    urlParams: ['invoiceId']\n  }),\n  pay: stripeMethod({\n    method: 'POST',\n    path: '{invoiceId}/pay',\n    urlParams: ['invoiceId']\n  }),\n  retrieveLines: stripeMethod({\n    method: 'GET',\n    path: '{invoiceId}/lines',\n    urlParams: ['invoiceId']\n  }),\n  retrieveUpcoming: stripeMethod({\n    method: 'GET',\n    path: function path(urlData) {\n      var url = 'upcoming?';\n      var hasParam = false; // If you pass just a hash with the relevant parameters, including customer id inside.\n\n      if (urlData.invoiceOptionsOrCustomerId && typeof urlData.invoiceOptionsOrCustomerId === 'object') {\n        return url + utils.stringifyRequestData(urlData.invoiceOptionsOrCustomerId);\n      } // Legacy implementation where the first parameter is a customer id as a string\n\n\n      if (urlData.invoiceOptionsOrCustomerId && typeof urlData.invoiceOptionsOrCustomerId === 'string') {\n        url = url + 'customer=' + urlData.invoiceOptionsOrCustomerId;\n        hasParam = true;\n      } // Legacy support where second argument is the subscription id\n\n\n      if (urlData.invoiceOptionsOrSubscriptionId && typeof urlData.invoiceOptionsOrSubscriptionId === 'string') {\n        return url + (hasParam ? '&' : '') + 'subscription=' + urlData.invoiceOptionsOrSubscriptionId;\n      } else if (urlData.invoiceOptionsOrSubscriptionId && typeof urlData.invoiceOptionsOrSubscriptionId === 'object') {\n        return url + (hasParam ? '&' : '') + utils.stringifyRequestData(urlData.invoiceOptionsOrSubscriptionId);\n      }\n\n      return url;\n    },\n    urlParams: ['optional!invoiceOptionsOrCustomerId', 'optional!invoiceOptionsOrSubscriptionId']\n  }),\n  sendInvoice: stripeMethod({\n    method: 'POST',\n    path: '{invoiceId}/send',\n    urlParams: ['invoiceId']\n  }),\n  voidInvoice: stripeMethod({\n    method: 'POST',\n    path: '{invoiceId}/void',\n    urlParams: ['invoiceId']\n  })\n});","map":null,"metadata":{},"sourceType":"script"}