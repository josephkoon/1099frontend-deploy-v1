{"ast":null,"code":"import _classCallCheck from \"/Users/josephkoon/Desktop/1099-complete/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkoon/Desktop/1099-complete/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkoon/Desktop/1099-complete/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkoon/Desktop/1099-complete/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkoon/Desktop/1099-complete/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/josephkoon/Desktop/1099-complete/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/josephkoon/Desktop/1099-complete/client/src/components/Form1099/GetPayerInfo.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\nimport { updatePayer } from '../../actions';\nimport isPhone from 'validator/lib/isMobilePhone';\n\nvar GetPayerInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GetPayerInfo, _React$Component);\n\n  function GetPayerInfo(_props) {\n    var _this;\n\n    _classCallCheck(this, GetPayerInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetPayerInfo).call(this, _props));\n\n    _this.renderToolTip = function (props) {\n      return React.createElement(ReactTooltip, {\n        className: \"tooltip-container\",\n        id: props.input,\n        place: \"right\",\n        type: \"dark\",\n        effect: \"solid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, props.tip);\n    };\n\n    _this.state = {\n      name: '',\n      nameError: '',\n      isTouchedName: false,\n      tin: '',\n      tinError: '',\n      isTouchedTin: false,\n      zipcode: '',\n      zipcodeError: '',\n      isTouchedZipcode: false,\n      street: '',\n      streetError: '',\n      isTouchedStreet: false,\n      city: '',\n      cityError: '',\n      isTouchedCity: false,\n      state: '',\n      stateError: '',\n      isTouchedState: false,\n      phone: '',\n      phoneError: '',\n      isTouchedPhone: false\n    };\n    _this.handleNameBlur = _this.handleNameBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTinBlur = _this.handleTinBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTinChange = _this.handleTinChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZipcodeBlur = _this.handleZipcodeBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZipcodeChange = _this.handleZipcodeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStreetBlur = _this.handleStreetBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStreetChange = _this.handleStreetChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCityBlur = _this.handleCityBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCityChange = _this.handleCityChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStateBlur = _this.handleStateBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStateChange = _this.handleStateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePhoneBlur = _this.handlePhoneBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePhoneChange = _this.handlePhoneChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GetPayerInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRef(this);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onRef(undefined);\n    }\n  }, {\n    key: \"validateAllPayer\",\n    value: function validateAllPayer() {\n      this.handleNameBlur();\n      this.handleTinBlur();\n      this.handleZipcodeBlur();\n      this.handleStreetBlur();\n      this.handleCityBlur();\n      this.handleStateBlur();\n      this.handlePhoneBlur();\n    }\n  }, {\n    key: \"handleNameChange\",\n    value: function handleNameChange(e) {\n      var _this2 = this;\n\n      this.setState({\n        name: e.target.value,\n        isTouchedName: true\n      }, function () {\n        _this2.props.updatePayer(_this2.state);\n      });\n    }\n  }, {\n    key: \"handleNameBlur\",\n    value: function handleNameBlur(e) {\n      var _this3 = this;\n\n      var value = this.refs.name.value;\n      var errorMessage = '';\n\n      if (!value) {\n        errorMessage = 'Payer name is required.';\n      }\n\n      this.setState({\n        nameError: errorMessage\n      }, function () {\n        _this3.props.updatePayer(_this3.state);\n      });\n    }\n  }, {\n    key: \"handleTinChange\",\n    value: function handleTinChange(e) {\n      var _this4 = this;\n\n      this.setState({\n        tin: e.target.value,\n        isTouchedTin: true\n      }, function () {\n        _this4.props.updatePayer(_this4.state);\n      });\n    }\n  }, {\n    key: \"handleTinBlur\",\n    value: function handleTinBlur(e) {\n      var _this5 = this;\n\n      var value = this.refs.tin.value;\n      var errorMessage = '';\n\n      if (value.length !== 9) {\n        errorMessage = 'Payer TIN is not valid.  Must be 9 digits.';\n      }\n\n      if (!value) {\n        errorMessage = 'Payer TIN is required.';\n      }\n\n      this.setState({\n        tinError: errorMessage\n      }, function () {\n        _this5.props.updatePayer(_this5.state);\n      });\n    }\n  }, {\n    key: \"handleStreetChange\",\n    value: function handleStreetChange(e) {\n      var _this6 = this;\n\n      this.setState({\n        street: e.target.value,\n        isTouchedStreet: true\n      }, function () {\n        _this6.props.updatePayer(_this6.state);\n      });\n    }\n  }, {\n    key: \"handleStreetBlur\",\n    value: function handleStreetBlur(e) {\n      var _this7 = this;\n\n      var value = this.refs.street.value;\n      var errorMessage = '';\n\n      if (!value) {\n        errorMessage = 'Payer street address is required.';\n      }\n\n      this.setState({\n        streetError: errorMessage\n      }, function () {\n        _this7.props.updatePayer(_this7.state);\n      });\n    }\n  }, {\n    key: \"handleCityChange\",\n    value: function handleCityChange(e) {\n      var _this8 = this;\n\n      this.setState({\n        city: e.target.value,\n        isTouchedCity: true\n      }, function () {\n        _this8.props.updatePayer(_this8.state);\n      });\n    }\n  }, {\n    key: \"handleCityBlur\",\n    value: function handleCityBlur(e) {\n      var _this9 = this;\n\n      var value = this.refs.city.value;\n      var errorMessage = ''; // if (!value) {\n      //     errorMessage = 'Payer city is required.'\n      // } \n\n      this.setState({\n        cityError: errorMessage\n      }, function () {\n        _this9.props.updatePayer(_this9.state);\n      });\n    }\n  }, {\n    key: \"handleStateChange\",\n    value: function handleStateChange(e) {\n      var _this10 = this;\n\n      this.setState({\n        state: e.target.value,\n        isTouchedState: true\n      }, function () {\n        _this10.props.updatePayer(_this10.state);\n      });\n    }\n  }, {\n    key: \"handleStateBlur\",\n    value: function handleStateBlur(e) {\n      var _this11 = this;\n\n      var value = this.refs.state.value;\n      var errorMessage = ''; // if (!value) {\n      //     errorMessage = 'Payer state is required.'\n      // } \n\n      this.setState({\n        stateError: errorMessage\n      }, function () {\n        _this11.props.updatePayer(_this11.state);\n      });\n    }\n  }, {\n    key: \"handleZipcodeChange\",\n    value: function handleZipcodeChange(e) {\n      var _this12 = this;\n\n      var zip = e.target.value;\n      var zipURL = \"http://ziptasticapi.com/\" + zip;\n      this.setState({\n        isTouchedZipcode: true,\n        isTouchedCity: true,\n        isTouchedState: true\n      });\n\n      if (zip.length === 5) {\n        fetch(zipURL).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          document.getElementById('city').value = data.city;\n          document.getElementById('state').value = data.state;\n\n          _this12.setState({\n            city: data.city || '',\n            state: data.state || '',\n            zipcode: zip\n          });\n        }).then(function () {\n          _this12.props.updatePayer(_this12.state);\n        });\n      }\n    }\n  }, {\n    key: \"handleZipcodeBlur\",\n    value: function handleZipcodeBlur(e) {\n      var _this13 = this;\n\n      var value = this.refs.zipcode.value;\n      var errorMessage = '';\n\n      if (value.length !== 5) {\n        errorMessage = 'Payer zipcode is not valid. Length must be 5 digits.';\n      }\n\n      if (!value) {\n        errorMessage = 'Payer zipcode is required.';\n      }\n\n      this.setState({\n        zipcodeError: errorMessage\n      }, function () {\n        _this13.props.updatePayer(_this13.state);\n      });\n    }\n  }, {\n    key: \"handlePhoneChange\",\n    value: function handlePhoneChange(e) {\n      var _this14 = this;\n\n      this.setState({\n        phone: e.target.value,\n        isTouchedPhone: true\n      }, function () {\n        _this14.props.updatePayer(_this14.state);\n      });\n    }\n  }, {\n    key: \"handlePhoneBlur\",\n    value: function handlePhoneBlur(e) {\n      var _this15 = this;\n\n      var value = this.refs.phone.value;\n      var errorMessage = '';\n\n      if (!isPhone(value)) {\n        errorMessage = 'Payer phone is invalid';\n      }\n\n      if (!value) {\n        errorMessage = 'Payer phone is required.';\n      }\n\n      this.setState({\n        phoneError: errorMessage\n      }, function () {\n        _this15.props.updatePayer(_this15.state);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this16 = this;\n\n      var errorStyle = {\n        border: '1px solid red'\n      };\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Payer Information\")), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Payer Name *\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        ref: \"name\",\n        style: this.state.nameError ? errorStyle : null,\n        onChange: function onChange(e) {\n          return _this16.handleNameChange(e);\n        },\n        onBlur: function onBlur(e) {\n          return _this16.handleNameBlur(e);\n        },\n        \"data-for\": \"name\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's name. Required.\",\n        input: \"name\"\n      })), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, this.state.nameError)), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Payer Federal Tax ID * XX-XXXXXXX\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"tin\",\n        ref: \"tin\",\n        style: this.state.tinError ? errorStyle : null,\n        onChange: function onChange(e) {\n          return _this16.handleTinChange(e);\n        },\n        onBlur: function onBlur(e) {\n          return _this16.handleTinBlur(e);\n        },\n        \"data-for\": \"tin\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's Federal Tax ID.  Required.\",\n        input: \"tin\"\n      })), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, this.state.tinError)), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Payer Street Address *\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"street\",\n        ref: \"street\",\n        style: this.state.streetError ? errorStyle : null,\n        onChange: function onChange(e) {\n          return _this16.handleStreetChange(e);\n        },\n        onBlur: function onBlur(e) {\n          return _this16.handleStreetBlur(e);\n        },\n        \"data-for\": \"street\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's street address.  Required.\",\n        input: \"street\"\n      })), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, this.state.streetError)), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"City *\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"city\",\n        ref: \"city\",\n        style: this.state.cityError ? errorStyle : null,\n        onChange: function onChange(e) {\n          return _this16.handleCityChange(e);\n        },\n        onBlur: function onBlur(e) {\n          return _this16.handleCityBlur(e);\n        },\n        \"data-for\": \"city\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's city.  Required.\",\n        input: \"city\"\n      })), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, this.state.cityError)), React.createElement(\"div\", {\n        class: \"form-row\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"State *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"state\",\n        ref: \"state\",\n        style: this.state.stateError ? errorStyle : null,\n        onChange: function onChange(e) {\n          return _this16.handleStateChange(e);\n        },\n        onBlur: function onBlur(e) {\n          return _this16.handleStateBlur(e);\n        },\n        \"data-for\": \"state\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's state.  Required.\",\n        input: \"state\"\n      })), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, this.state.stateError)), React.createElement(\"div\", {\n        class: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"Zipcode *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"zipcode\",\n        ref: \"zipcode\",\n        style: this.state.zipcodeError ? errorStyle : null,\n        onChange: function onChange(e) {\n          return _this16.handleZipcodeChange(e);\n        },\n        onBlur: function onBlur(e) {\n          return _this16.handleZipcodeBlur(e);\n        },\n        \"data-for\": \"zipcode\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's zipcode.  Required.\",\n        input: \"zipcode\"\n      })), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, this.state.zipcodeError))), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Payer Phone Number * XXX-XXX-XXXX\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"phone\",\n        ref: \"phone\",\n        style: this.state.phoneError ? errorStyle : null,\n        onChange: function onChange(e) {\n          return _this16.handlePhoneChange(e);\n        },\n        onBlur: function onBlur(e) {\n          return _this16.handlePhoneBlur(e);\n        },\n        \"data-for\": \"phone\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's phone number.  Required.\",\n        input: \"phone\"\n      })), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, this.state.phoneError)));\n    }\n  }]);\n\n  return GetPayerInfo;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updatePayer: updatePayer\n  }, dispatch);\n};\n\nGetPayerInfo = connect(mapStateToProps, mapDispatchToProps)(GetPayerInfo);\nexport default GetPayerInfo;","map":{"version":3,"sources":["/Users/josephkoon/Desktop/1099-complete/client/src/components/Form1099/GetPayerInfo.js"],"names":["React","bindActionCreators","connect","ReactTooltip","updatePayer","isPhone","GetPayerInfo","props","renderToolTip","input","tip","state","name","nameError","isTouchedName","tin","tinError","isTouchedTin","zipcode","zipcodeError","isTouchedZipcode","street","streetError","isTouchedStreet","city","cityError","isTouchedCity","stateError","isTouchedState","phone","phoneError","isTouchedPhone","handleNameBlur","bind","handleNameChange","handleTinBlur","handleTinChange","handleZipcodeBlur","handleZipcodeChange","handleStreetBlur","handleStreetChange","handleCityBlur","handleCityChange","handleStateBlur","handleStateChange","handlePhoneBlur","handlePhoneChange","onRef","undefined","e","setState","target","value","refs","errorMessage","length","zip","zipURL","fetch","then","response","json","data","document","getElementById","errorStyle","border","color","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip'\n\nimport { updatePayer } from '../../actions';\n\nimport isPhone from 'validator/lib/isMobilePhone';\n\n\nclass GetPayerInfo extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n            name: '',\n            nameError:'',\n            isTouchedName: false,\n\n            tin: '',\n            tinError:'',\n            isTouchedTin: false,\n\n            zipcode: '',\n            zipcodeError:'',\n            isTouchedZipcode: false,\n\n            street: '',\n            streetError:'',\n            isTouchedStreet: false,\n\n            city: '',\n            cityError:'',\n            isTouchedCity: false,\n\n            state: '',\n            stateError:'',\n            isTouchedState: false,\n\n            phone: '',\n            phoneError:'',\n            isTouchedPhone: false,\n        }\n\n        this.handleNameBlur = this.handleNameBlur.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n\n        this.handleTinBlur = this.handleTinBlur.bind(this);\n        this.handleTinChange = this.handleTinChange.bind(this);\n\n        this.handleZipcodeBlur = this.handleZipcodeBlur.bind(this);\n        this.handleZipcodeChange = this.handleZipcodeChange.bind(this);\n\n        this.handleStreetBlur = this.handleStreetBlur.bind(this);\n        this.handleStreetChange = this.handleStreetChange.bind(this);\n\n        this.handleCityBlur = this.handleCityBlur.bind(this);\n        this.handleCityChange = this.handleCityChange.bind(this);\n\n        this.handleStateBlur = this.handleStateBlur.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n\n        this.handlePhoneBlur = this.handlePhoneBlur.bind(this);\n        this.handlePhoneChange = this.handlePhoneChange.bind(this);\n    }\n    \n\n\n    renderToolTip = (props) => {\n        return(\n            <ReactTooltip className='tooltip-container' id={props.input} place=\"right\" type=\"dark\" effect=\"solid\">\n                 {props.tip}\n            </ReactTooltip>\n        )\n    };\n    \n    componentDidMount() {\n        this.props.onRef(this)\n    }\n    componentWillUnmount() {\n        this.props.onRef(undefined)\n    }\n    \n\n    validateAllPayer(){\n        this.handleNameBlur()\n     \n        this.handleTinBlur()\n        \n        this.handleZipcodeBlur()\n      \n        this.handleStreetBlur()\n       \n        this.handleCityBlur()\n      \n        this.handleStateBlur()\n      \n        this.handlePhoneBlur()\n     \n    }\n\n\n    handleNameChange(e) {\n        this.setState({ name:e.target.value, isTouchedName:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n\n    handleNameBlur(e) {\n        let value = this.refs.name.value\n        let errorMessage = ''\n\n        if (!value) {\n            errorMessage = 'Payer name is required.'\n        } \n\n        this.setState({nameError:errorMessage}, () => {\n            this.props.updatePayer(this.state)\n        })\n    };\n\n\n\n    handleTinChange(e) {\n        this.setState({ tin:e.target.value, isTouchedTin:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n    handleTinBlur(e) {\n        let value = this.refs.tin.value\n        let errorMessage = ''\n\n        if(value.length !== 9){\n            errorMessage = 'Payer TIN is not valid.  Must be 9 digits.'\n        }\n        if (!value) {\n            errorMessage = 'Payer TIN is required.'\n        } \n\n        this.setState({tinError:errorMessage}, () => {\n            this.props.updatePayer(this.state)\n        })\n    };\n\n\n\n    handleStreetChange(e) {\n        this.setState({ street:e.target.value, isTouchedStreet:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n    handleStreetBlur(e) {\n        let value = this.refs.street.value\n        let errorMessage = ''\n\n        if (!value) {\n            errorMessage = 'Payer street address is required.'\n        } \n\n        this.setState({streetError:errorMessage}, () => {\n            this.props.updatePayer(this.state)\n        })\n    };\n\n\n\n\n    handleCityChange(e) {\n        this.setState({ city:e.target.value, isTouchedCity:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n\n    handleCityBlur(e) {\n        let value = this.refs.city.value\n        let errorMessage = ''\n\n        // if (!value) {\n        //     errorMessage = 'Payer city is required.'\n        // } \n\n        this.setState({cityError:errorMessage}, () => {\n            this.props.updatePayer(this.state)\n        })\n    };\n\n\n\n    handleStateChange(e) {\n        this.setState({ state:e.target.value, isTouchedState:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n\n    handleStateBlur(e) {\n        let value = this.refs.state.value\n        let errorMessage = ''\n\n        // if (!value) {\n        //     errorMessage = 'Payer state is required.'\n        // } \n\n        this.setState({stateError:errorMessage}, () => {\n            this.props.updatePayer(this.state)\n        })\n    };\n\n\n\n\n\n\n    handleZipcodeChange(e) {\n        let zip = e.target.value;\n        var zipURL = \"http://ziptasticapi.com/\" + zip\n\n        this.setState({isTouchedZipcode: true, isTouchedCity:true, isTouchedState:true});\n\n        if (zip.length === 5) {\n            fetch(zipURL)\n            .then(response => response.json())\n            .then(data => {\n                document.getElementById('city').value = data.city\n                document.getElementById('state').value = data.state\n                this.setState({ \n                    city: data.city || '',\n                    state: data.state || '',\n                    zipcode: zip,\n                });\n            }).then(() => {\n                this.props.updatePayer(this.state)\n            })\n        } \n    }\n\n    handleZipcodeBlur(e) {\n        let value = this.refs.zipcode.value \n        let errorMessage = ''\n\n\n        if(value.length !== 5){\n            errorMessage = 'Payer zipcode is not valid. Length must be 5 digits.'\n        }\n        if (!value) {\n            errorMessage = 'Payer zipcode is required.'\n        } \n\n        this.setState({zipcodeError:errorMessage}, () => {\n            this.props.updatePayer(this.state)\n        })\n    };\n\n\n\n    handlePhoneChange(e) {\n        this.setState({ phone:e.target.value, isTouchedPhone:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n\n    handlePhoneBlur(e) {\n        let value = this.refs.phone.value\n        let errorMessage = ''\n\n        if(!isPhone(value)){\n            errorMessage = 'Payer phone is invalid'\n        }\n        if (!value) {\n            errorMessage = 'Payer phone is required.'\n        } \n\n        this.setState({phoneError:errorMessage}, () => {\n            this.props.updatePayer(this.state)\n        })\n    };\n\n\n\n\n\n\nrender() {\n    let errorStyle = {border:'1px solid red'}\n\n\n\n    return (\n        <form>\n            <div className=\"input-group\" align=\"left\">\n                <h4>Payer Information</h4>\n            </div>\n\n\n            <div align=\"left\">\n                <label>Payer Name *</label>\n                <div className=\"form-group\" align=\"left\" >\n                    <input type=\"text\" className=\"form-control\" id=\"name\" \n                        ref='name'\n                        style={this.state.nameError ? errorStyle : null}\n                        onChange={(e) => this.handleNameChange(e)} \n                        onBlur={(e) => this.handleNameBlur(e)} \n                        data-for='name' data-tip data-event='focus' data-event-off='blur'\n                    />\n                    {this.renderToolTip( {tip:\"Enter the payer's name. Required.\", input: \"name\"} )}\n                </div>\n                <span style={{color:'red'}}>{this.state.nameError}</span>\n            </div>\n\n\n            <div align=\"left\">\n                <label>Payer Federal Tax ID * XX-XXXXXXX</label>\n                <div className=\"form-group\" align=\"left\" >\n                    <input type=\"text\" className=\"form-control\" id=\"tin\"\n                        ref='tin' \n                        style={this.state.tinError ? errorStyle : null}\n                        onChange={(e) => this.handleTinChange(e)} \n                        onBlur={(e) => this.handleTinBlur(e)} \n                        data-for='tin' data-tip data-event='focus' data-event-off='blur'\n                    />\n                    {this.renderToolTip( {tip:\"Enter the payer's Federal Tax ID.  Required.\", input: \"tin\"} )}\n                </div>\n                <span style={{color:'red'}}>{this.state.tinError}</span>\n            </div>\n\n\n            <div align=\"left\">\n                <label>Payer Street Address *</label>\n                <div className=\"form-group\" align=\"left\" >\n                    <input type=\"text\" className=\"form-control\" id=\"street\" \n                        ref='street'\n                        style={this.state.streetError ? errorStyle : null}\n                        onChange={(e) => this.handleStreetChange(e)} \n                        onBlur={(e) => this.handleStreetBlur(e)} \n                        data-for='street' data-tip data-event='focus' data-event-off='blur'\n                    />\n                    {this.renderToolTip( {tip:\"Enter the payer's street address.  Required.\", input: \"street\"} )}\n                </div>\n                <span style={{color:'red'}}>{this.state.streetError}</span>\n            </div>\n\n\n            <div align=\"left\">\n                <label>City *</label>\n                <div className=\"form-group\" align=\"left\" >\n                    <input type=\"text\" className=\"form-control\" id=\"city\" \n                        ref='city'\n                        style={this.state.cityError ? errorStyle : null}\n                        onChange={(e) => this.handleCityChange(e)} \n                        onBlur={(e) => this.handleCityBlur(e)} \n                        data-for='city' data-tip data-event='focus' data-event-off='blur'\n                        readOnly\n                    />\n                    {this.renderToolTip( {tip:\"Enter the payer's city.  Required.\", input: \"city\"} )}\n                </div>\n                <span style={{color:'red'}}>{this.state.cityError}</span>\n            </div>\n\n \n            <div class=\"form-row\" align=\"left\">\n                <div class=\"col\">\n                    <label>State *</label>\n                    <div className=\"input-group\" align=\"left\" >\n                        <input type=\"text\" className=\"form-control\" id=\"state\" \n                            ref='state'\n                            style={this.state.stateError ? errorStyle : null}\n                            onChange={(e) => this.handleStateChange(e)} \n                            onBlur={(e) => this.handleStateBlur(e)} \n                            data-for='state' data-tip data-event='focus' data-event-off='blur'\n                            readOnly\n                        />\n                        {this.renderToolTip( {tip:\"Enter the payer's state.  Required.\", input: \"state\"} )}\n                    </div>\n                    <span style={{color:'red'}}>{this.state.stateError}</span>\n                </div>\n                <div class=\"col\">\n                    <label>Zipcode *</label>\n                    <div className=\"input-group\" align=\"left\" >\n                        <input type=\"text\" className=\"form-control\" id=\"zipcode\" \n                            ref='zipcode'\n                            style={this.state.zipcodeError ? errorStyle : null}\n                            onChange={(e) => this.handleZipcodeChange(e)} \n                            onBlur={(e) => this.handleZipcodeBlur(e)} \n                            data-for='zipcode' data-tip data-event='focus' data-event-off='blur'\n                        />\n                        {this.renderToolTip( {tip:\"Enter the payer's zipcode.  Required.\", input: \"zipcode\"} )}\n                    </div>\n                    <span style={{color:'red'}}>{this.state.zipcodeError}</span>\n                </div>\n            </div>\n            \n\n            <div align=\"left\">\n                <label>Payer Phone Number * XXX-XXX-XXXX</label>\n                <div className=\"form-group\" align=\"left\" >\n                    <input type=\"text\" className=\"form-control\" id=\"phone\" \n                        ref='phone'\n                        style={this.state.phoneError ? errorStyle : null}\n                        onChange={(e) => this.handlePhoneChange(e)} \n                        onBlur={(e) => this.handlePhoneBlur(e)} \n                        data-for='phone' data-tip data-event='focus' data-event-off='blur'\n                    />\n                    {this.renderToolTip( {tip:\"Enter the payer's phone number.  Required.\", input: \"phone\"} )}\n                </div>\n                <span style={{color:'red'}}>{this.state.phoneError}</span>\n            </div>\n\n\n        </form>\n    )\n}\n}\n\n\nfunction mapStateToProps(state) {\n    return{\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        updatePayer: updatePayer\n    }, dispatch )\n}\n\nGetPayerInfo = connect(mapStateToProps, mapDispatchToProps)(GetPayerInfo);\n\nexport default GetPayerInfo;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}