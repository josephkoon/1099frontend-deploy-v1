{"ast":null,"code":"import _objectSpread from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/josephkoon/Desktop/1099-complete/src/components/Form1099/GetPayerInfo.js\";\nimport React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { FieldCheck, FieldCheck3 } from './FieldCheck';\nimport { updatePayer } from '../../actions';\nimport store from '../../store';\nimport isPhone from 'validator/lib/isMobilePhone';\nimport payerValidator from '../../validate/payerValidator';\n\nvar GetPayerInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GetPayerInfo, _React$Component);\n\n  function GetPayerInfo(_props) {\n    var _this;\n\n    _classCallCheck(this, GetPayerInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetPayerInfo).call(this, _props));\n\n    _this.renderToolTip = function (props) {\n      return React.createElement(UncontrolledTooltip, {\n        placement: \"right\",\n        target: props.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, props.tip);\n    };\n\n    _this.renderError = function (props) {\n      if (!props.isTouched) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }));\n      }\n\n      if (props.isValid) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, props.message));\n    };\n\n    _this.state = {\n      name: '',\n      tin: '',\n      zipcode: '',\n      street: '',\n      city: null,\n      state: null,\n      phone: '',\n      isValidName: true,\n      isValidTIN: true,\n      isValidZip: true,\n      isValidAddress: true,\n      isValidPhone: true,\n      isTouchedName: false,\n      isTouchedTIN: false,\n      isTouchedZip: false,\n      isTouchedAddress: false,\n      isTouchedPhone: false,\n      //isFresh: false\n      payerErrors: {}\n    };\n    _this.handleFieldChange = _this.handleFieldChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.handleEINChange = this.handleEINChange.bind(this);\n    //this.handleAddressChange = this.handleAddressChange.bind(this);\n\n    _this.handleZipChange = _this.handleZipChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNameBlur = _this.handleNameBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTINBlur = _this.handleTINBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddressBlur = _this.handleAddressBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZipBlur = _this.handleZipBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.unsubscribe = '';\n    return _this;\n  }\n\n  _createClass(GetPayerInfo, [{\n    key: \"updateErrors\",\n    value: function updateErrors() {\n      var payerErrors = store.getState().payerErrors;\n      this.setState({\n        payerErrors: payerErrors\n      });\n      this.setState({\n        isValidName: !payerErrors.name\n      });\n      this.setState({\n        isValidTIN: !payerErrors.tin\n      });\n      this.setState({\n        isValidAddress: !payerErrors.street\n      });\n      this.setState({\n        isValidZip: !payerErrors.zipcode\n      });\n      this.setState({\n        isValidPhone: !payerErrors.phone\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = store.subscribe(this.updateErrors.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"handleNameBlur\",\n    value: function handleNameBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        name: value,\n        isTouchedName: true,\n        isValidName: value.length > 0\n      });\n      payerValidator();\n    }\n  }, {\n    key: \"handleTINBlur\",\n    value: function handleTINBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        tin: value,\n        isTouchedTIN: true,\n        isValidTIN: value.length === 9\n      });\n      payerValidator();\n    }\n  }, {\n    key: \"handleAddressBlur\",\n    value: function handleAddressBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        street: value,\n        isTouchedAddress: true,\n        isValidAddress: value.length > 0\n      });\n      payerValidator();\n    }\n  }, {\n    key: \"handleZipBlur\",\n    value: function handleZipBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        zip: value,\n        isTouchedZip: true,\n        isValidZip: value.length > 0\n      });\n      payerValidator();\n    }\n  }, {\n    key: \"handlePhoneBlur\",\n    value: function handlePhoneBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        phone: value,\n        isTouchedPhone: true,\n        isValidPhone: isPhone(value)\n      });\n      payerValidator();\n    }\n  }, {\n    key: \"handleFieldChange\",\n    value: function handleFieldChange(e, fieldname) {\n      var _this2 = this;\n\n      var value = e.target.value;\n\n      switch (fieldname) {\n        case 'name':\n          this.setState({\n            name: value,\n            isTouchedName: true,\n            isValidName: value.length > 2\n          }, function () {\n            _this2.props.updatePayer(_this2.state);\n          });\n          break;\n\n        case 'street':\n          this.setState({\n            street: value,\n            isTouchedAddress: true,\n            isValidAddress: true\n          }, function () {\n            _this2.props.updatePayer(_this2.state);\n          });\n          break;\n\n        case 'phone':\n          this.setState({\n            phone: value,\n            isValidPhone: value.length > 0\n          }, function () {\n            _this2.props.updatePayer(_this2.state);\n          });\n          break;\n\n        case 'ein':\n          var ein = e.target.value;\n          ein.length === 9 ? this.setState({\n            isValidTIN: true\n          }) : this.setState({\n            isValidTIN: false\n          });\n          this.setState({\n            tin: ein,\n            isTouchedTIN: true\n          }, function () {\n            _this2.props.updatePayer(_this2.state);\n          });\n          break;\n\n        default:\n          ;\n        // dispatch state to redux\n        // need action UPDATE_PAYER \n        // call this.props.updatePayer(this.state) from ../actions/index.js\n      }\n    } // handleEINChange(e) {\n    //     var ein = e.target.value;  \n    //     (ein.length === 9) ? this.setState({isValidTIN: true}) : this.setState({isValidTIN: false});\n    //     this.setState({ tin: ein });\n    // }\n\n  }, {\n    key: \"handleZipChange\",\n    value: function handleZipChange(e) {\n      var _this3 = this;\n\n      var zip = \"\";\n      zip = e.target.value;\n      this.setState({\n        isTouchedZip: false\n      });\n      var zipURL = \"http://ziptasticapi.com/\" + zip;\n\n      if (zip.length === 5) {\n        fetch(zipURL).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          document.getElementById('inputPayerCity').value = data.city;\n          document.getElementById('inputPayerState').value = data.state;\n\n          _this3.setState({\n            city: data.city,\n            state: data.state,\n            zipcode: zip,\n            isValidZip: true\n          });\n        }).then(function () {\n          _this3.props.updatePayer(_this3.state);\n        });\n      } else {\n        this.setState({\n          isValidZip: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      //const nameColor = !this.state.isTouchedName ? {backgroundColor: '#ffffff'} : !this.state.isValidName? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n      var nameColor = !this.state.isValidName || this.payerErrors && this.payerErrors.name ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      }; //const einColor = !this.state.isTouchedTIN ? {backgroundColor: '#ffffff'} : this.state.isValidTIN ? {backgroundColor: '#ffffff'} : {backgroundColor: '#ffb3b3'};\n\n      var einColor = !this.state.isValidTIN || this.payerErrors && this.payerErrors.tin ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      }; //const addressColor = !this.state.isTouchedAddress ? {backgroundColor: '#ffffff'} : this.state.isValidAddress ? {backgroundColor: '#ffffff'} : {backgroundColor: '#ffb3b3'};\n\n      var addressColor = !this.state.isValidAddress || this.payerErrors && this.payerErrors.street ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      };\n      var zipCol = !this.state.isValidZip || this.payerErrors && this.payerErrors.zipcode ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      };\n      var phoneColor = !this.state.isValidPhone || this.payerErrors && this.payerErrors.phone ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      };\n      var zipMargin = {\n        marginLeft: '-30px',\n        marginRight: '200px'\n      };\n\n      var zipColor = _objectSpread({}, zipCol, {\n        zipMargin: zipMargin\n      }); //    <FieldCheck isTouched={this.state.isTouchedName} isValid={this.state.isValidName} message=\"Name is required\"/>\n\n\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Payer Information\")), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Payer Name *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"inputPayerName\",\n        className: \"form-control\",\n        value: this.state.name,\n        style: nameColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"name\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleNameBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(UncontrolledTooltip, {\n        placement: \"right\",\n        target: \"inputPayerName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Enter the payer's name.  This field is required.\")), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidName,\n        message: this.state.payerErrors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Federal Tax ID XX-XXXXXXX *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"inputEIN\",\n        className: \"form-control\",\n        value: this.state.tin,\n        style: einColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"ein\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleTINBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's Federal Tax ID.  This field is required.\",\n        input: \"inputEIN\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidTIN,\n        message: this.state.payerErrors.tin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Payer Address *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"inputPayerAddress\",\n        className: \"form-control\",\n        value: this.state.street,\n        style: addressColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"street\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleAddressBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's street address.  This field is required.\",\n        input: \"inputPayerAddress\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidAddress,\n        message: \"Address is required.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputPayerCity\",\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        class: \"form-row\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputPayerState\",\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        class: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Zipcode *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"inputPayerZip2\",\n        className: \"form-control\",\n        style: zipColor,\n        onChange: function onChange(event) {\n          return _this4.handleZipChange(event);\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleZipBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's Zip code.  This field is required.\",\n        input: \"inputPayerZip2\"\n      })), React.createElement(FieldCheck, {\n        isTouched: this.state.isTouchedZip,\n        isValid: this.state.isValidZip,\n        message: \"Zip Code is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"container\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        style: {\n          marginLeft: '-15px',\n          marginRight: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"State\"))), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        style: {\n          marginLeft: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Zip Code *\"))))), React.createElement(\"div\", {\n        className: \"container\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        style: {\n          marginLeft: '-15px',\n          marginRight: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputPayerState\",\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"inputPayerZip2\",\n        className: \"form-control\",\n        style: zipColor,\n        onChange: function onChange(event) {\n          return _this4.handleZipChange(event);\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleZipBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's Zip code.  This field is required.\",\n        input: \"inputPayerZip2\"\n      })))), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Phone Number XXX-XXX-XXXX *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"tel\",\n        id: \"inputPayerPhone\",\n        className: \"form-control\",\n        value: this.state.phone,\n        style: phoneColor,\n        pattern: \"\\\\d{3}[\\\\-]\\\\d{3}[\\\\-]\\\\d{4}\" //onChange={(event) => this.handlePhoneChange(event)} \n        ,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"phone\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handlePhoneBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the payer's phone number.  This field is required.\",\n        input: \"inputPayerPhone\"\n      })), React.createElement(FieldCheck, {\n        isTouched: this.state.isTouchedPhone,\n        isValid: this.state.isValidPhone,\n        message: \"Phone number is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return GetPayerInfo;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    payer: state.payer\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updatePayer: updatePayer\n  }, dispatch);\n};\n\nGetPayerInfo = connect(mapStateToProps, mapDispatchToProps)(GetPayerInfo);\nexport default GetPayerInfo;","map":{"version":3,"sources":["/Users/josephkoon/Desktop/1099-complete/src/components/Form1099/GetPayerInfo.js"],"names":["React","UncontrolledTooltip","bindActionCreators","connect","FieldCheck","FieldCheck3","updatePayer","store","isPhone","payerValidator","GetPayerInfo","props","renderToolTip","input","tip","renderError","isTouched","isValid","message","state","name","tin","zipcode","street","city","phone","isValidName","isValidTIN","isValidZip","isValidAddress","isValidPhone","isTouchedName","isTouchedTIN","isTouchedZip","isTouchedAddress","isTouchedPhone","payerErrors","handleFieldChange","bind","handleZipChange","handleNameBlur","handleTINBlur","handleAddressBlur","handleZipBlur","unsubscribe","getState","setState","subscribe","updateErrors","e","value","target","length","zip","fieldname","ein","zipURL","fetch","then","response","json","data","document","getElementById","nameColor","backgroundColor","einColor","addressColor","zipCol","phoneColor","zipMargin","marginLeft","marginRight","zipColor","event","handlePhoneBlur","Component","mapStateToProps","payer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { FieldCheck, FieldCheck3 } from './FieldCheck';\nimport { updatePayer } from '../../actions';\n\nimport store from '../../store';\n\nimport isPhone from 'validator/lib/isMobilePhone';\nimport payerValidator from '../../validate/payerValidator';\n\n\nclass GetPayerInfo extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            tin: '',\n            zipcode: '',\n            street: '',\n            city: null,\n            state: null,\n            phone: '',\n            isValidName: true,\n            isValidTIN: true,\n            isValidZip: true,\n            isValidAddress: true,\n            isValidPhone: true,\n            isTouchedName: false,\n            isTouchedTIN: false,\n            isTouchedZip: false,\n            isTouchedAddress: false,\n            isTouchedPhone: false,\n            //isFresh: false\n            payerErrors: {}\n        }\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        //this.handleEINChange = this.handleEINChange.bind(this);\n        //this.handleAddressChange = this.handleAddressChange.bind(this);\n        this.handleZipChange = this.handleZipChange.bind(this);\n        this.handleNameBlur = this.handleNameBlur.bind(this);\n        this.handleTINBlur = this.handleTINBlur.bind(this);\n        this.handleAddressBlur = this.handleAddressBlur.bind(this);\n        this.handleZipBlur = this.handleZipBlur.bind(this);\n        this.unsubscribe = '';\n    }\n    \n    updateErrors() {\n        const payerErrors = store.getState().payerErrors;\n        this.setState({ payerErrors:payerErrors });\n        this.setState({ isValidName:!payerErrors.name});\n        this.setState({ isValidTIN:!payerErrors.tin});\n        this.setState({ isValidAddress:!payerErrors.street});\n        this.setState({ isValidZip:!payerErrors.zipcode});\n        this.setState({ isValidPhone:!payerErrors.phone});\n    }\n\n    componentDidMount () {\n\t\tthis.unsubscribe = store.subscribe(this.updateErrors.bind(this))\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe();\n    }\n    \n    handleNameBlur(e) {\n        const value = e.target.value;   \n        this.setState({name:value, isTouchedName:true, isValidName:(value.length > 0)});\n        payerValidator();\n    };\n\n    handleTINBlur(e) {\n        const value = e.target.value;   \n        this.setState({tin:value, isTouchedTIN:true, isValidTIN:(value.length ===9)});\n        payerValidator();\n    };\n\n    handleAddressBlur(e) {\n        const value = e.target.value;   \n        this.setState({street:value, isTouchedAddress:true, isValidAddress:(value.length > 0)});\n        payerValidator();\n    };\n\n    handleZipBlur(e) {\n        const value = e.target.value;   \n        this.setState({zip:value, isTouchedZip:true, isValidZip:(value.length > 0)});\n        payerValidator();\n    };\n\n    handlePhoneBlur(e) {\n        const value = e.target.value;   \n        this.setState({phone:value, isTouchedPhone:true, isValidPhone:isPhone(value) });\n        payerValidator();\n    };\n\n    handleFieldChange(e, fieldname) {\n        const value = e.target.value;   \n        switch(fieldname) {\n            case 'name': \n                this.setState({name:value, isTouchedName:true, isValidName:(value.length > 2)}, () => {\n                    this.props.updatePayer(this.state)\n                });\n                break;\n            case 'street': \n                this.setState({street:value, isTouchedAddress: true, isValidAddress:true}, () => {\n                    this.props.updatePayer(this.state)\n                });\n                break;\n            case 'phone': \n                this.setState({phone:value, isValidPhone: (value.length > 0) }, () => {\n                    this.props.updatePayer(this.state)\n                });\n                break;\n            case 'ein': \n                var ein = e.target.value;  \n                (ein.length === 9) ? this.setState({isValidTIN: true}) : this.setState({isValidTIN: false});\n                this.setState({ tin: ein, isTouchedTIN: true }, () => {\n                    this.props.updatePayer(this.state)\n                });\n                break;\n            default:;\n\n        // dispatch state to redux\n        // need action UPDATE_PAYER \n        // call this.props.updatePayer(this.state) from ../actions/index.js\n        }\n    }\n\n    // handleEINChange(e) {\n    //     var ein = e.target.value;  \n    //     (ein.length === 9) ? this.setState({isValidTIN: true}) : this.setState({isValidTIN: false});\n    //     this.setState({ tin: ein });\n    // }\n\n\n    handleZipChange(e) {\n        var zip = \"\";\n        zip = e.target.value;\n        this.setState({isTouchedZip: false});\n        var zipURL = \"http://ziptasticapi.com/\" + zip\n        if (zip.length === 5) {\n            fetch(zipURL)\n            .then(response => response.json())\n            .then(data => {\n                document.getElementById('inputPayerCity').value = data.city\n                document.getElementById('inputPayerState').value = data.state\n                this.setState({ \n                    city: data.city,\n                    state: data.state,\n                    zipcode: zip,\n                    isValidZip: true\n                    });\n            }).then( () => {\n                this.props.updatePayer(this.state)\n            })\n        } else {\n            this.setState({isValidZip: false});\n        }\n    }\n    \n    renderToolTip = (props) => {\n        return(\n            <UncontrolledTooltip placement=\"right\" target={props.input} >\n                {props.tip}\n            </UncontrolledTooltip>\n        )\n    };\n    \n    renderError = (props) => {\n        if (!props.isTouched) {\n            return (<div><p></p></div>);\n        }\n        if (props.isValid) {\n            return (<div><p></p></div>);\n        }\n    \n        return (\n            <div align=\"left\">\n                <font className=\"text-danger\">{props.message}</font>\n            </div>\n        );\n    };\n\n\nrender() {\n    //const nameColor = !this.state.isTouchedName ? {backgroundColor: '#ffffff'} : !this.state.isValidName? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n    const nameColor = (!this.state.isValidName || (this.payerErrors && this.payerErrors.name)) ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n    //const einColor = !this.state.isTouchedTIN ? {backgroundColor: '#ffffff'} : this.state.isValidTIN ? {backgroundColor: '#ffffff'} : {backgroundColor: '#ffb3b3'};\n    const einColor = (!this.state.isValidTIN || (this.payerErrors && this.payerErrors.tin)) ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n    //const addressColor = !this.state.isTouchedAddress ? {backgroundColor: '#ffffff'} : this.state.isValidAddress ? {backgroundColor: '#ffffff'} : {backgroundColor: '#ffb3b3'};\n    const addressColor = (!this.state.isValidAddress || (this.payerErrors && this.payerErrors.street)) ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n    const zipCol = (!this.state.isValidZip || (this.payerErrors && this.payerErrors.zipcode)) ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n    const phoneColor = (!this.state.isValidPhone || (this.payerErrors && this.payerErrors.phone)) ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n    const zipMargin = { marginLeft:'-30px', marginRight:'200px' };\n    const zipColor = {...zipCol, zipMargin };\n\n//    <FieldCheck isTouched={this.state.isTouchedName} isValid={this.state.isValidName} message=\"Name is required\"/>\n\n    return (\n        <form>\n            <div className=\"form-group\" align=\"left\">\n                <h4>Payer Information</h4>\n            </div>\n\n            <div align=\"left\">\n                <small>Payer Name *</small>\n                <div className=\"input-group\" >\n                    <input type=\"text\" id=\"inputPayerName\" className=\"form-control\" \n                        value={this.state.name}\n                        style={nameColor}\n                        onChange={(e) => this.handleFieldChange(e, \"name\")} \n                        onBlur={(e) => this.handleNameBlur(e)}\n                        />\n                    <UncontrolledTooltip placement=\"right\" target=\"inputPayerName\" >\n                        Enter the payer's name.  This field is required.\n                    </UncontrolledTooltip>\n                </div>\n                <FieldCheck3 isValid={this.state.isValidName} message={this.state.payerErrors.name} />\n            </div>\n\n            <div align=\"left\">\n                <small>Federal Tax ID XX-XXXXXXX *</small>\n                <div className=\"input-group\" >\n                    <input type=\"number\" id=\"inputEIN\" className=\"form-control\" \n                        value={this.state.tin}\n                        style={einColor}\n                        onChange={(e) => this.handleFieldChange(e, \"ein\")} \n                        onBlur={(e) => this.handleTINBlur(e)}\n                        />\n                    {this.renderToolTip( {tip:\"Enter the payer's Federal Tax ID.  This field is required.\", input: \"inputEIN\"} )}\n                </div>\n                <FieldCheck3 isValid={this.state.isValidTIN} message={this.state.payerErrors.tin} />\n            </div>\n\n            <div align=\"left\">\n                <small>Payer Address *</small>\n                <div className=\"input-group\" >\n                    <input type=\"text\" id=\"inputPayerAddress\" className=\"form-control\" \n                        value={this.state.street}\n                        style={addressColor}\n                        onChange={(e) => this.handleFieldChange(e, \"street\")} \n                        onBlur={(e) => this.handleAddressBlur(e)}\n                        />\n                    {this.renderToolTip( {tip:\"Enter the payer's street address.  This field is required.\", input: \"inputPayerAddress\"} )}\n                </div>\n                <FieldCheck3 isValid={this.state.isValidAddress} message=\"Address is required.\"/>\n            </div>\n\n            <div align=\"left\">\n                <small>City</small>\n                <div className=\"input-group\" align=\"left\">\n    \t\t\t\t<input type=\"text\" className=\"form-control\" id=\"inputPayerCity\" readOnly />\n    \t\t\t</div>\n            </div>\n\n\n\n\n          <div class=\"form-row\" align=\"left\">\n            <div class=\"col\">\n\n                <small>State</small>\n                <div className=\"input-group\" >\n                    <input type=\"text\" className=\"form-control\" id=\"inputPayerState\" readOnly/>\n                </div>\n\n            </div>\n            <div class=\"col\">\n\n                <small>Zipcode *</small>\n                <div className=\"input-group\" >\n                    <input type=\"number\" id=\"inputPayerZip2\" \n                        className=\"form-control\" \n                        style={zipColor}\n                        onChange={(event) => this.handleZipChange(event)} \n                        onBlur={(e) => this.handleZipBlur(e)}\n                    />\n                    {this.renderToolTip( {tip:\"Enter the payer's Zip code.  This field is required.\", input: \"inputPayerZip2\"} )}\n                </div>\n                <FieldCheck isTouched={this.state.isTouchedZip} isValid={this.state.isValidZip} message=\"Zip Code is required\"/>\n\n\n            </div>\n          </div>\n\n\n\n\n\n            <div className=\"container\" align=\"left\">\n                <div className=\"row\">\n                    <div className=\"col-sm-6\" style={{ marginLeft:'-15px', marginRight:'15px' }}>\n                        <div align=\"left\"><small>State</small></div>\n                    </div>\n                    <div className=\"col-sm-6\" style={{ marginLeft:'0px' }}>\n                        <div align=\"left\"><small>Zip Code *</small></div>\n                    </div>\n                </div>\n\t\t\t</div>\n            <div className=\"container\" align=\"left\">\n                <div className=\"row\" >\n                    <div className=\"col-sm-6\" style={{ marginLeft:'-15px', marginRight:'0px'}}>\n                        <input type=\"text\" className=\"form-control\" id=\"inputPayerState\" readOnly/>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <input type=\"number\" id=\"inputPayerZip2\" \n                            className=\"form-control\" \n                            style={zipColor}\n                            onChange={(event) => this.handleZipChange(event)} \n                            onBlur={(e) => this.handleZipBlur(e)}\n                        />\n                        {this.renderToolTip( {tip:\"Enter the payer's Zip code.  This field is required.\", input: \"inputPayerZip2\"} )}\n                    </div>\n                </div>\n\t\t\t</div>\n\n\n\n\n\n\n            <div align=\"left\" >\n                <small>Phone Number XXX-XXX-XXXX *</small>\n                <div className=\"input-group\" >\n                    <input  type=\"tel\" id=\"inputPayerPhone\" className=\"form-control\" \n                        value={this.state.phone}\n                        style={phoneColor}\n                        pattern='\\d{3}[\\-]\\d{3}[\\-]\\d{4}'\n                        //onChange={(event) => this.handlePhoneChange(event)} \n                        onChange={(e) => this.handleFieldChange(e, \"phone\")} \n                        onBlur={(e) => this.handlePhoneBlur(e)}\n                        />\n                    {this.renderToolTip( {tip:\"Enter the payer's phone number.  This field is required.\", input: \"inputPayerPhone\"} )}\n                </div>\n                <FieldCheck isTouched={this.state.isTouchedPhone} isValid={this.state.isValidPhone} message=\"Phone number is required\"/>\n            </div>\n\n        </form>\n    )\n}\n}\n\n\nfunction mapStateToProps(state) {\n    return{\n        payer: state.payer\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        updatePayer: updatePayer\n    }, dispatch )\n}\n\nGetPayerInfo = connect(mapStateToProps, mapDispatchToProps)(GetPayerInfo);\n\nexport default GetPayerInfo;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}