{"ast":null,"code":"import _classCallCheck from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/josephkoon/Desktop/1099-complete/src/components/Form1099/GetRecipientInfo.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { FieldCheck3 } from './FieldCheck';\nimport { updateRecipient } from '../../actions';\nimport store from '../../store';\nimport recipientValidator from '../../validate/recipientValidator'; //function GetRecipientInfo() {\n\nvar GetRecipientInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GetRecipientInfo, _React$Component);\n\n  function GetRecipientInfo(_props) {\n    var _this;\n\n    _classCallCheck(this, GetRecipientInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetRecipientInfo).call(this, _props));\n\n    _this.renderToolTip = function (props) {\n      return React.createElement(UncontrolledTooltip, {\n        placement: \"right\",\n        target: props.input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, props.tip);\n    };\n\n    _this.renderError = function (props) {\n      if (!props.isTouched) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }));\n      }\n\n      if (props.isValid) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, props.message));\n    };\n\n    _this.state = {\n      name: '',\n      tin: '',\n      zipcode: '',\n      street: '',\n      city: '',\n      state: '',\n      account: '',\n      FATCA: false,\n      isValidName: true,\n      isValidTIN: true,\n      isValidZip: true,\n      isValidAddress: true,\n      isValidAccount: true,\n      isTouchedName: false,\n      isTouchedTIN: false,\n      isTouchedZip: false,\n      isTouchedAddress: false,\n      isTouchedAccount: false,\n      isRequiredAccount: false,\n      isTouchedFATCA: false,\n      recipientErrors: {}\n    };\n    _this.handleZipChange = _this.handleZipChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNameBlur = _this.handleNameBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTINBlur = _this.handleTINBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddressBlur = _this.handleAddressBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAccountBlur = _this.handleAccountBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFATCABlur = _this.handleFATCABlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZipBlur = _this.handleZipBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GetRecipientInfo, [{\n    key: \"updateErrors\",\n    value: function updateErrors() {\n      var recipientErrors = store.getState().recipientErrors;\n      this.setState({\n        recipientErrors: recipientErrors\n      });\n      this.setState({\n        isValidName: !recipientErrors.name\n      });\n      this.setState({\n        isValidTIN: !recipientErrors.tin\n      });\n      this.setState({\n        isValidAddress: !recipientErrors.street\n      });\n      this.setState({\n        isValidZip: !recipientErrors.zipcode\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = store.subscribe(this.updateErrors.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"handleNameBlur\",\n    value: function handleNameBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        name: value,\n        isTouchedName: true,\n        isValidName: value.length > 0\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleTINBlur\",\n    value: function handleTINBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        tin: value,\n        isTouchedTIN: true,\n        isValidTIN: value.length > 0\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleAddressBlur\",\n    value: function handleAddressBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        street: value,\n        isTouchedAddress: true,\n        isValidAddress: value.length > 3\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleZipBlur\",\n    value: function handleZipBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        zip: value,\n        isTouchedZip: true,\n        isValidZip: value.length > 0\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleAccountBlur\",\n    value: function handleAccountBlur(e) {\n      var value = e.target.value;\n      this.setState({\n        account: value,\n        isTouchedAccount: true\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleFATCABlur\",\n    value: function handleFATCABlur(e) {\n      var value = e.target.value;\n      this.setState({\n        FATCA: value,\n        isTouchedFATCA: true\n      });\n      recipientValidator();\n    }\n  }, {\n    key: \"handleFieldChange\",\n    value: function handleFieldChange(e, fieldname) {\n      var _this2 = this;\n\n      var value = e.target.value;\n\n      switch (fieldname) {\n        case 'name':\n          this.setState({\n            name: value,\n            isTouchedName: true,\n            isValidName: value.length > 0\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          });\n          break;\n\n        case 'street':\n          this.setState({\n            street: value,\n            isTouchedAddress: true,\n            isValidAddress: value.length > 0\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          });\n          break;\n\n        case 'ein':\n          var ein = e.target.value;\n          ein.length === 9 ? this.setState({\n            isValidTIN: true\n          }) : this.setState({\n            isValidTIN: false\n          });\n          this.setState({\n            tin: ein,\n            isTouchedTIN: true\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          });\n          break;\n\n        case 'account':\n          this.setState({\n            account: value,\n            isTouchedAccount: true\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          });\n          break;\n\n        case 'FATCA':\n          this.setState({\n            FATCA: value,\n            isTouchedFATCA: true\n          }, function () {\n            _this2.props.updateRecipient(_this2.state);\n          }); //console.log( this.state.FATCA )\n\n          break;\n\n        default:\n          ;\n      }\n    }\n  }, {\n    key: \"handleZipChange\",\n    value: function handleZipChange(e) {\n      var _this3 = this;\n\n      var zip = \"\";\n      zip = e.target.value;\n      this.setState({\n        isTouchedZip: false\n      });\n      var zipURL = \"http://ziptasticapi.com/\" + zip;\n\n      if (zip.length === 5) {\n        fetch(zipURL).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _this3.setState({\n            city: data.city,\n            state: data.state,\n            zipcode: zip,\n            isValidZip: true\n          }); // if (data.city === undefined) {\n          //     this.setState({isValidZip: false})\n          // }\n\n        }).then(function () {\n          _this3.props.updateRecipient(_this3.state);\n        });\n      } else {\n        this.setState({\n          isValidZip: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var nameColor = !this.state.isValidName || this.recipientErrors && this.recipientErrors.name ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      };\n      var einColor = !this.state.isValidTIN || this.recipientErrors && this.recipientErrors.tin ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      };\n      var addressColor = !this.state.isValidAddress || this.recipientErrors && this.recipientErrors.street ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      };\n      var zipColor = !this.state.isValidZip || this.recipientErrors && this.recipientErrors.zip ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      };\n      var accountColor = this.state.isRequiredAccount && !this.state.isValidAccount ? {\n        backgroundColor: '#ffb3b3'\n      } : {\n        backgroundColor: '#ffffff'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Recipient Information\")), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Recipient Name *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"RecipientName\",\n        required: true,\n        value: this.state.name,\n        style: nameColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"name\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleNameBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"If the recipient is an individual enter the their first and last name.  If the recipient is a company, enter the company name.  This field is required.\",\n        input: \"RecipientName\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidName,\n        message: this.state.recipientErrors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Tax Identification Number * XXX-XX-XXXX\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: \"inputSSN\",\n        required: true,\n        value: this.state.tin,\n        style: einColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"ein\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleTINBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the recipient's tax identification number.  For a company, use their EIN.  For an individual, use their SSN, ATIN or ITIN.  This field is required.\",\n        input: \"inputSSN\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidTIN,\n        message: this.state.recipientErrors.tin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Recipient Address *\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputRecipientAddress\",\n        required: true,\n        value: this.state.street,\n        style: addressColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, 'street');\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleAddressBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the recipient's street address.  This field is required.\",\n        input: \"inputRecipientAddress\"\n      }))), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidAddress,\n        message: this.state.recipientErrors.street,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Recipient City\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputRecipientCity\",\n        value: this.state.city,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"form-row\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputRecipientState\",\n        value: this.state.city,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        class: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Zipcode *\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        id: \"inputRecipientZip\",\n        className: \"form-control\",\n        style: zipColor,\n        onChange: function onChange(event) {\n          return _this4.handleZipChange(event);\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleZipBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Enter the recipient's Zipcode.  This field is required.\",\n        input: \"inputRecipientZip\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidZip,\n        message: this.state.recipientErrors.zip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Account Number\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputRecipientAccount\",\n        style: accountColor,\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"account\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleAccountBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })), this.renderToolTip({\n        tip: \"Enter the recipient's account number.  This field is required if the FATCA checkbox is checked.\",\n        input: \"inputRecipientAccount\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidAccount,\n        message: this.state.recipientErrors.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"FATCA\"), React.createElement(\"div\", {\n        className: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        \"aria-label\": \"Checkbox for following text input\",\n        onChange: function onChange(e) {\n          return _this4.handleFieldChange(e, \"FATCA\");\n        },\n        onBlur: function onBlur(e) {\n          return _this4.handleFATCABlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }))), React.createElement(\"input\", {\n        type: \"readonly\",\n        className: \"form-control\",\n        id: \"chkbxFATCA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(UncontrolledTooltip, {\n        placement: \"right\",\n        target: \"chkbxFATCA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Foreign Account Tax Compliance Act.  Check the checkbox if you are a U.S. payer that is reporting per Chapter 4 of Regulations section 1.1471-4(d)(2)(iii)(A), or if you are a Foreign Financial Institution (FFI) reporting payments to a U.S. account.\"))));\n    }\n  }]);\n\n  return GetRecipientInfo;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    recipient: state.recipient\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateRecipient: updateRecipient\n  }, dispatch);\n};\n\nGetRecipientInfo = connect(mapStateToProps, mapDispatchToProps)(GetRecipientInfo);\nexport default GetRecipientInfo;","map":{"version":3,"sources":["/Users/josephkoon/Desktop/1099-complete/src/components/Form1099/GetRecipientInfo.js"],"names":["React","bindActionCreators","connect","UncontrolledTooltip","FieldCheck3","updateRecipient","store","recipientValidator","GetRecipientInfo","props","renderToolTip","input","tip","renderError","isTouched","isValid","message","state","name","tin","zipcode","street","city","account","FATCA","isValidName","isValidTIN","isValidZip","isValidAddress","isValidAccount","isTouchedName","isTouchedTIN","isTouchedZip","isTouchedAddress","isTouchedAccount","isRequiredAccount","isTouchedFATCA","recipientErrors","handleZipChange","bind","handleNameBlur","handleTINBlur","handleAddressBlur","handleAccountBlur","handleFATCABlur","handleZipBlur","getState","setState","unsubscribe","subscribe","updateErrors","e","value","target","length","zip","fieldname","ein","zipURL","fetch","then","response","json","data","nameColor","backgroundColor","einColor","addressColor","zipColor","accountColor","handleFieldChange","event","Component","mapStateToProps","recipient","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { UncontrolledTooltip } from 'reactstrap';\n\nimport { FieldCheck3 } from './FieldCheck';\nimport { updateRecipient } from '../../actions';\n\nimport store from '../../store';\nimport recipientValidator from '../../validate/recipientValidator';\n\n\n\n//function GetRecipientInfo() {\nclass GetRecipientInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            tin: '',\n            zipcode: '',\n            street: '',\n            city: '',\n            state: '',\n            account: '',\n            FATCA: false,\n            isValidName: true,\n            isValidTIN: true,\n            isValidZip: true,\n            isValidAddress: true,\n            isValidAccount: true,\n            isTouchedName: false,\n            isTouchedTIN: false,\n            isTouchedZip: false,\n            isTouchedAddress: false,\n            isTouchedAccount: false,\n            isRequiredAccount: false,\n            isTouchedFATCA: false,\n            recipientErrors: {}\n        }\n        this.handleZipChange = this.handleZipChange.bind(this);\n        this.handleNameBlur = this.handleNameBlur.bind(this);\n        this.handleTINBlur = this.handleTINBlur.bind(this);\n        this.handleAddressBlur = this.handleAddressBlur.bind(this);\n        this.handleAccountBlur = this.handleAccountBlur.bind(this);\n        this.handleFATCABlur = this.handleFATCABlur.bind(this);\n        this.handleZipBlur = this.handleZipBlur.bind(this);\n    }\n\n    updateErrors() {\n        const recipientErrors = store.getState().recipientErrors;\n        this.setState({ recipientErrors:recipientErrors });\n        this.setState({ isValidName:!recipientErrors.name});\n        this.setState({ isValidTIN:!recipientErrors.tin});\n        this.setState({ isValidAddress:!recipientErrors.street});\n        this.setState({ isValidZip:!recipientErrors.zipcode});\n    }\n\n    componentDidMount () {\n        this.unsubscribe = store.subscribe(this.updateErrors.bind(this))\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe();\n    }\n\n    handleNameBlur(e) {\n        const value = e.target.value;   \n        this.setState({ name:value, isTouchedName:true, isValidName:(value.length > 0)});\n        recipientValidator();\n    };\n\n    handleTINBlur(e) {\n        const value = e.target.value;   \n        this.setState({ tin:value, isTouchedTIN:true, isValidTIN:(value.length > 0)});\n        recipientValidator();\n    };\n\n    handleAddressBlur(e) {\n        const value = e.target.value;   \n        this.setState({ street:value, isTouchedAddress:true, isValidAddress:(value.length > 3)});\n        recipientValidator();\n    };\n\n    handleZipBlur(e) {\n        const value = e.target.value;   \n        this.setState({ zip:value, isTouchedZip:true, isValidZip:(value.length > 0)});\n        recipientValidator();\n    };\n\n    handleAccountBlur(e) {\n        const value = e.target.value;   \n        this.setState({ account:value, isTouchedAccount:true });\n        recipientValidator();\n    };\n\n    handleFATCABlur(e) {\n        const value = e.target.value;   \n        this.setState({ FATCA:value, isTouchedFATCA:true });\n        recipientValidator();\n    };\n\n    handleFieldChange(e, fieldname) {\n        const value = e.target.value;     \n        switch(fieldname) {\n            case 'name': \n                this.setState({name:value, isTouchedName:true, isValidName:(value.length > 0)}, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                break;\n            case 'street': \n                this.setState({street:value, isTouchedAddress: true, isValidAddress:(value.length > 0)}, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                break;\n            case 'ein': \n                var ein = e.target.value;  \n                (ein.length === 9) ? this.setState({isValidTIN: true}) : this.setState({isValidTIN: false});\n                this.setState({ tin: ein, isTouchedTIN: true }, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                break;\n            case 'account': \n                this.setState({ account:value, isTouchedAccount: true }, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                break;\n            case 'FATCA': \n                this.setState({FATCA:value, isTouchedFATCA: true }, () => {\n                    this.props.updateRecipient(this.state)\n                });\n                //console.log( this.state.FATCA )\n                break;\n            default:;\n        }\n    }\n\n    handleZipChange(e) {\n        var zip = \"\";\n        zip = e.target.value;\n        this.setState({isTouchedZip: false});\n        var zipURL = \"http://ziptasticapi.com/\" + zip\n        if (zip.length === 5) {\n            fetch(zipURL)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ \n                    city: data.city,\n                    state: data.state,\n                    zipcode: zip,\n                    isValidZip: true\n                });\n                // if (data.city === undefined) {\n                //     this.setState({isValidZip: false})\n                // }\n            }).then( () => {\n                this.props.updateRecipient(this.state)\n            })\n        } else {\n            this.setState({isValidZip: false});\n        }\n    }\n    \n    renderToolTip = (props) => {\n        return(\n            <UncontrolledTooltip placement=\"right\" target={props.input} >\n                {props.tip}\n            </UncontrolledTooltip>\n        )\n    };\n    \n    renderError = (props) => {\n        if (!props.isTouched) {\n            return (<div><p></p></div>);\n        }\n        if (props.isValid) {\n            return (<div><p></p></div>);\n        }\n    \n        return (\n            <div align=\"left\">\n                <font className=\"text-danger\">{props.message}</font>\n            </div>\n        );\n    };\n        \n    render() {            \n        const nameColor = (!this.state.isValidName || (this.recipientErrors && this.recipientErrors.name)) ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n        const einColor = (!this.state.isValidTIN || (this.recipientErrors && this.recipientErrors.tin)) ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n        const addressColor = (!this.state.isValidAddress || (this.recipientErrors && this.recipientErrors.street)) ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n        const zipColor = (!this.state.isValidZip || (this.recipientErrors && this.recipientErrors.zip)) ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n        const accountColor = this.state.isRequiredAccount && !this.state.isValidAccount ? {backgroundColor: '#ffb3b3'} : {backgroundColor: '#ffffff'};\n\n        return (\n        <div>\n            <div className=\"input-group\" align=\"left\">\n                <h4>Recipient Information</h4>\n            </div>\n\n            <div align=\"left\">\n                <small>Recipient Name *</small>\n                <div className=\"input-group\">\n                    <input type=\"text\" className=\"form-control\" id=\"RecipientName\" required\n                        value={this.state.name}\n                        style={nameColor}\n                        onChange={(e) => this.handleFieldChange(e, \"name\")} \n                        onBlur={(e) => this.handleNameBlur(e)}\n                    >\n                    </input>\n                    {this.renderToolTip( {tip:\"If the recipient is an individual enter the their first and last name.  If the recipient is a company, enter the company name.  This field is required.\", input: \"RecipientName\"} )}\n                </div>\n                <FieldCheck3 isValid={this.state.isValidName} message={this.state.recipientErrors.name} />\n            </div>\n\n            <div align=\"left\">\n                <small>Tax Identification Number * XXX-XX-XXXX</small>\n                <div className=\"input-group\">\n                      <input type=\"number\" className=\"form-control\" id=\"inputSSN\" required\n                        value={this.state.tin}\n                        style={einColor}\n                        onChange={(e) => this.handleFieldChange(e, \"ein\")} \n                        onBlur={(e) => this.handleTINBlur(e)}\n                      />\n                    {this.renderToolTip( {tip:\"Enter the recipient's tax identification number.  For a company, use their EIN.  For an individual, use their SSN, ATIN or ITIN.  This field is required.\", input: \"inputSSN\"} )}\n            \t</div>\n                <FieldCheck3 isValid={this.state.isValidTIN} message={this.state.recipientErrors.tin} />\n            </div>\n\n            <div align=\"left\">\n                <small>Recipient Address *</small>\n                <div className=\"form-group\" align=\"left\">\n    \t\t\t\t<div>\n    \t\t\t\t  <input type=\"text\" className=\"form-control\" id=\"inputRecipientAddress\" required\n                        value={this.state.street}\n                        style={addressColor}\n                        onChange={(e) => this.handleFieldChange(e, 'street')} \n                        onBlur={(e) => this.handleAddressBlur(e)}\n                      />\n                      {this.renderToolTip( {tip:\"Enter the recipient's street address.  This field is required.\", input: \"inputRecipientAddress\"} )}\n    \t\t\t\t</div>\n    \t\t\t</div>\n                <FieldCheck3 isValid={this.state.isValidAddress} message={this.state.recipientErrors.street} />\n            </div>\n\n            <div align=\"left\">\n                <small>Recipient City</small>\n                <div className=\"form-group\" align=\"left\">\n    \t\t\t\t<div>\n                      <input type=\"text\" className=\"form-control\" id=\"inputRecipientCity\" value={this.state.city} readOnly />\n    \t\t\t\t</div>\n    \t\t\t</div>\n            </div>\n\n\n\n\n            <div class=\"form-row\" align=\"left\">\n                <div class=\"col\">\n                    <small>State</small>\n                    <div className=\"input-group\" >\n                        <input type=\"text\" className=\"form-control\" id=\"inputRecipientState\" value={this.state.city} readOnly/>\n                    </div>\n                </div>\n                <div class=\"col\">\n                    <small>Zipcode *</small>\n                    <div className=\"input-group\" >\n                        <input type=\"number\" id=\"inputRecipientZip\" className=\"form-control\" \n                            style={zipColor}\n                            onChange={(event) => this.handleZipChange(event)} \n                            onBlur={(e) => this.handleZipBlur(e)}\n                        />\n                        {this.renderToolTip( {tip:\"Enter the recipient's Zipcode.  This field is required.\", input: \"inputRecipientZip\"} )}\n                    </div>\n                    <FieldCheck3 isValid={this.state.isValidZip} message={this.state.recipientErrors.zip} />\n                </div>\n            </div>\n\n\n            <div align=\"left\">\n                <small>Account Number</small>\n                <div className=\"form-group\" align=\"left\">\n    \t\t\t\t<div>\n                      <input type=\"text\" className=\"form-control\" id=\"inputRecipientAccount\" \n                        style={accountColor}\n                        onChange={(e) => this.handleFieldChange(e, \"account\")} \n                        onBlur={(e) => this.handleAccountBlur(e)}\n                        />\n    \t\t\t\t</div>\n                    {this.renderToolTip( {tip:\"Enter the recipient's account number.  This field is required if the FATCA checkbox is checked.\", input: \"inputRecipientAccount\"} )}\n    \t\t\t</div>\n                <FieldCheck3 isValid={this.state.isValidAccount} message={this.state.recipientErrors.account} />\n            </div>\n\n            <div align=\"left\" >\n                <small>FATCA</small>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\">\n                            <input type=\"checkbox\" aria-label=\"Checkbox for following text input\"\n                                onChange={(e) => this.handleFieldChange(e, \"FATCA\")} \n                                onBlur={(e) => this.handleFATCABlur(e)}\n                            />\n                        </div>\n                    </div>\n                <input type=\"readonly\" className=\"form-control\" id=\"chkbxFATCA\" />\n                <UncontrolledTooltip placement=\"right\" target=\"chkbxFATCA\">\n                    Foreign Account Tax Compliance Act.  Check the checkbox if you are a U.S. payer that is reporting per Chapter 4 of Regulations section 1.1471-4(d)(2)(iii)(A), or if you are a Foreign Financial Institution (FFI) reporting payments to a U.S. account.\n                </UncontrolledTooltip>\n                </div>\n            </div>\n\n\n        </div>\n    )}\n}\n\n\nfunction mapStateToProps(state) {\n    return{\n        recipient: state.recipient\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        updateRecipient: updateRecipient\n    }, dispatch )\n}\n\nGetRecipientInfo = connect(mapStateToProps, mapDispatchToProps)(GetRecipientInfo);\n\nexport default GetRecipientInfo;\n\n\n\n"]},"metadata":{},"sourceType":"module"}