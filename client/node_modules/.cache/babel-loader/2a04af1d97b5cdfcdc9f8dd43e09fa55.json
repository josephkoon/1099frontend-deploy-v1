{"ast":null,"code":"'use strict';\n\nvar StripeResource = require('../StripeResource');\n\nvar stripeMethod = StripeResource.method;\nmodule.exports = StripeResource.extend({\n  path: 'charges',\n  includeBasic: ['create', 'list', 'retrieve', 'update', 'setMetadata', 'getMetadata'],\n  capture: stripeMethod({\n    method: 'POST',\n    path: '/{id}/capture',\n    urlParams: ['id']\n  }),\n  refund: stripeMethod({\n    method: 'POST',\n    path: '/{id}/refund',\n    urlParams: ['id']\n  }),\n  updateDispute: stripeMethod({\n    method: 'POST',\n    path: '/{id}/dispute',\n    urlParams: ['id']\n  }),\n  closeDispute: stripeMethod({\n    method: 'POST',\n    path: '/{id}/dispute/close',\n    urlParams: ['id']\n  }),\n\n  /**\n   * Charge: Refund methods\n   * (Deprecated)\n   */\n  createRefund: stripeMethod({\n    method: 'POST',\n    path: '/{chargeId}/refunds',\n    urlParams: ['chargeId']\n  }),\n  listRefunds: stripeMethod({\n    method: 'GET',\n    path: '/{chargeId}/refunds',\n    urlParams: ['chargeId'],\n    methodType: 'list'\n  }),\n  retrieveRefund: stripeMethod({\n    method: 'GET',\n    path: '/{chargeId}/refunds/{refundId}',\n    urlParams: ['chargeId', 'refundId']\n  }),\n  updateRefund: stripeMethod({\n    method: 'POST',\n    path: '/{chargeId}/refunds/{refundId}',\n    urlParams: ['chargeId', 'refundId']\n  }),\n  markAsSafe: function markAsSafe(chargeId) {\n    return this.update(chargeId, {\n      'fraud_details': {\n        'user_report': 'safe'\n      }\n    });\n  },\n  markAsFraudulent: function markAsFraudulent(chargeId) {\n    return this.update(chargeId, {\n      'fraud_details': {\n        'user_report': 'fraudulent'\n      }\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"script"}