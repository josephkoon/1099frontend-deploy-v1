{"ast":null,"code":"import _classCallCheck from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/josephkoon/Desktop/1099-complete/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/josephkoon/Desktop/1099-complete/src/components/Form1099/GetRecipientInfo.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\nimport { FieldCheck3 } from './FieldCheck';\nimport { updateRecipient } from '../../actions';\nimport store from '../../store';\nimport recipientValidator from '../../validate/recipientValidator'; //function GetRecipientInfo() {\n\nvar GetRecipientInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GetRecipientInfo, _React$Component);\n\n  function GetRecipientInfo(_props) {\n    var _this;\n\n    _classCallCheck(this, GetRecipientInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetRecipientInfo).call(this, _props));\n\n    _this.renderToolTip = function (props) {\n      return React.createElement(ReactTooltip, {\n        className: \"tooltip-container\",\n        id: props.input,\n        place: \"right\",\n        type: \"dark\",\n        effect: \"solid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, props.tip);\n    };\n\n    _this.state = {\n      name: '',\n      nameError: '',\n      isTouchedName: false,\n      tin: '',\n      tinError: '',\n      isTouchedTin: false,\n      zipcode: '',\n      zipcodeError: '',\n      isTouchedZipcode: false,\n      street: '',\n      streetError: '',\n      isTouchedStreet: false,\n      city: '',\n      cityError: '',\n      isTouchedCity: false,\n      state: '',\n      stateError: '',\n      isTouchedState: false,\n      account_nbr: '',\n      account_nbrError: '',\n      isTouchedAccount_nbr: false,\n      FACTA: '',\n      FACTAError: '',\n      isTouchedFACTA: false\n    };\n    _this.handleNameBlur = _this.handleNameBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTinBlur = _this.handleTinBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTinChange = _this.handleTinChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZipcodeBlur = _this.handleZipcodeBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZipcodeChange = _this.handleZipcodeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStreetBlur = _this.handleStreetBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStreetChange = _this.handleStreetChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCityBlur = _this.handleCityBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCityChange = _this.handleCityChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStateBlur = _this.handleStateBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStateChange = _this.handleStateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAccount_nbrBlur = _this.handleAccount_nbrBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAccount_nbrChange = _this.handleAccount_nbrChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFACTABlur = _this.handleFACTABlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFACTAChange = _this.handleFACTAChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GetRecipientInfo, [{\n    key: \"handleNameChange\",\n    value: function handleNameChange(e) {\n      var _this2 = this;\n\n      this.setState({\n        name: e.target.value,\n        isTouchedName: true\n      }, function () {\n        _this2.props.updatePayer(_this2.state);\n      });\n    }\n  }, {\n    key: \"handleNameBlur\",\n    value: function handleNameBlur(e) {\n      var value = e.target.value;\n      var errorMessage;\n\n      if (!value) {\n        errorMessage = 'Payer name is required.';\n      }\n\n      this.setState({\n        nameError: errorMessage\n      });\n    }\n  }, {\n    key: \"handleTinChange\",\n    value: function handleTinChange(e) {\n      var _this3 = this;\n\n      this.setState({\n        Tin: e.target.value,\n        isTouchedTin: true\n      }, function () {\n        _this3.props.updatePayer(_this3.state);\n      });\n    }\n  }, {\n    key: \"handleTinBlur\",\n    value: function handleTinBlur(e) {\n      var value = e.target.value;\n      var errorMessage;\n\n      if (value.length !== 9) {\n        errorMessage = 'Payer TIN is not valid.  Must be 9 digits.';\n      }\n\n      if (!value) {\n        errorMessage = 'TIN is required.';\n      }\n\n      this.setState({\n        tinError: errorMessage\n      });\n    }\n  }, {\n    key: \"handleStreetChange\",\n    value: function handleStreetChange(e) {\n      var _this4 = this;\n\n      this.setState({\n        street: e.target.value,\n        isTouchedStreet: true\n      }, function () {\n        _this4.props.updatePayer(_this4.state);\n      });\n    }\n  }, {\n    key: \"handleStreetBlur\",\n    value: function handleStreetBlur(e) {\n      var value = e.target.value;\n      var errorMessage;\n\n      if (!value) {\n        errorMessage = 'Payer street address is required.';\n      }\n\n      this.setState({\n        streetError: errorMessage\n      });\n    }\n  }, {\n    key: \"handleCityChange\",\n    value: function handleCityChange(e) {\n      var _this5 = this;\n\n      this.setState({\n        city: e.target.value,\n        isTouchedCity: true\n      }, function () {\n        _this5.props.updatePayer(_this5.state);\n      });\n    }\n  }, {\n    key: \"handleCityBlur\",\n    value: function handleCityBlur(e) {\n      var value = e.target.value;\n      var errorMessage;\n\n      if (!value) {\n        errorMessage = 'Payer city is required.';\n      }\n\n      this.setState({\n        cityError: errorMessage\n      });\n    }\n  }, {\n    key: \"handleStateChange\",\n    value: function handleStateChange(e) {\n      var _this6 = this;\n\n      this.setState({\n        state: e.target.value,\n        isTouchedState: true\n      }, function () {\n        _this6.props.updatePayer(_this6.state);\n      });\n    }\n  }, {\n    key: \"handleStateBlur\",\n    value: function handleStateBlur(e) {\n      var value = e.target.value;\n      var errorMessage;\n\n      if (!value) {\n        errorMessage = 'Payer state is required.';\n      }\n\n      this.setState({\n        stateError: errorMessage\n      });\n    }\n  }, {\n    key: \"camelCase\",\n    value: function camelCase(string) {\n      return string.substring(0, 1).toUpperCase() + string.substring(1).toLowerCase();\n    }\n  }, {\n    key: \"handleZipcodeChange\",\n    value: function handleZipcodeChange(e) {\n      var _this7 = this;\n\n      var zip = e.target.value;\n      var zipURL = \"http://ziptasticapi.com/\" + zip;\n      this.setState({\n        isTouchedZip: true\n      });\n\n      if (zip.length === 5) {\n        fetch(zipURL).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          document.getElementById('city').value = _this7.camelCase(data.city);\n          document.getElementById('state').value = data.state;\n\n          _this7.setState({\n            city: _this7.camelCase(data.city),\n            state: data.state,\n            zipcode: zip\n          });\n        }).then(function () {\n          _this7.props.updatePayer(_this7.state);\n        });\n      }\n    }\n  }, {\n    key: \"handleZipcodeBlur\",\n    value: function handleZipcodeBlur(e) {\n      var value = e.target.value;\n      var errorMessage;\n\n      if (value.length !== 5) {\n        errorMessage = 'Payer zipcode is not valid. Length must be 5 digits.';\n      }\n\n      if (!value) {\n        errorMessage = 'Payer zipcode is required.';\n      }\n\n      this.setState({\n        zipcodeError: errorMessage\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Recipient Information\")), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Account Number\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"inputRecipientAccount\",\n        style: accountColor,\n        onChange: function onChange(e) {\n          return _this8.handleFieldChange(e, \"account\");\n        },\n        onBlur: function onBlur(e) {\n          return _this8.handleAccountBlur(e);\n        },\n        \"data-for\": \"inputRecipientAccount\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), this.renderToolTip({\n        tip: \"Enter the recipient's account number.  This field is required if the FATCA checkbox is checked.\",\n        input: \"inputRecipientAccount\"\n      })), React.createElement(FieldCheck3, {\n        isValid: this.state.isValidAccount,\n        message: this.state.recipientErrors.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"FATCA\"), React.createElement(\"div\", {\n        className: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        \"aria-label\": \"Checkbox for following text input\",\n        onChange: function onChange(e) {\n          return _this8.handleFieldChange(e, \"FATCA\");\n        },\n        onBlur: function onBlur(e) {\n          return _this8.handleFATCABlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))), React.createElement(\"input\", {\n        type: \"readonly\",\n        className: \"form-control\",\n        id: \"chkbxFATCA\",\n        \"data-for\": \"inputFATCA\",\n        \"data-tip\": true,\n        \"data-event\": \"focus\",\n        \"data-event-off\": \"blur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), this.renderToolTip({\n        tip: \"Foreign Account Tax Compliance Act.  Check the checkbox if you are a U.S. payer that is reporting per Chapter 4 of Regulations section 1.1471-4(d)(2)(iii)(A), or if you are a Foreign Financial Institution (FFI) reporting payments to a U.S. account.\",\n        input: \"inputFATCA\"\n      }))));\n    }\n  }]);\n\n  return GetRecipientInfo;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    recipient: state.recipient\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateRecipient: updateRecipient\n  }, dispatch);\n};\n\nGetRecipientInfo = connect(mapStateToProps, mapDispatchToProps)(GetRecipientInfo);\nexport default GetRecipientInfo;","map":{"version":3,"sources":["/Users/josephkoon/Desktop/1099-complete/src/components/Form1099/GetRecipientInfo.js"],"names":["React","bindActionCreators","connect","ReactTooltip","FieldCheck3","updateRecipient","store","recipientValidator","GetRecipientInfo","props","renderToolTip","input","tip","state","name","nameError","isTouchedName","tin","tinError","isTouchedTin","zipcode","zipcodeError","isTouchedZipcode","street","streetError","isTouchedStreet","city","cityError","isTouchedCity","stateError","isTouchedState","account_nbr","account_nbrError","isTouchedAccount_nbr","FACTA","FACTAError","isTouchedFACTA","handleNameBlur","bind","handleNameChange","handleTinBlur","handleTinChange","handleZipcodeBlur","handleZipcodeChange","handleStreetBlur","handleStreetChange","handleCityBlur","handleCityChange","handleStateBlur","handleStateChange","handleAccount_nbrBlur","handleAccount_nbrChange","handleFACTABlur","handleFACTAChange","e","setState","target","value","updatePayer","errorMessage","Tin","length","string","substring","toUpperCase","toLowerCase","zip","zipURL","isTouchedZip","fetch","then","response","json","data","document","getElementById","camelCase","accountColor","handleFieldChange","handleAccountBlur","isValidAccount","recipientErrors","account","handleFATCABlur","Component","mapStateToProps","recipient","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip'\n\nimport { FieldCheck3 } from './FieldCheck';\nimport { updateRecipient } from '../../actions';\n\nimport store from '../../store';\nimport recipientValidator from '../../validate/recipientValidator';\n\n\n//function GetRecipientInfo() {\nclass GetRecipientInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            name: '',\n            nameError:'',\n            isTouchedName: false,\n\n            tin: '',\n            tinError:'',\n            isTouchedTin: false,\n\n            zipcode: '',\n            zipcodeError:'',\n            isTouchedZipcode: false,\n\n            street: '',\n            streetError:'',\n            isTouchedStreet: false,\n\n            city: '',\n            cityError:'',\n            isTouchedCity: false,\n\n            state: '',\n            stateError:'',\n            isTouchedState: false,\n\n            account_nbr: '',\n            account_nbrError:'',\n            isTouchedAccount_nbr: false,\n\n            FACTA: '',\n            FACTAError:'',\n            isTouchedFACTA: false,\n        }\n\n\n        this.handleNameBlur = this.handleNameBlur.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n\n        this.handleTinBlur = this.handleTinBlur.bind(this);\n        this.handleTinChange = this.handleTinChange.bind(this);\n\n        this.handleZipcodeBlur = this.handleZipcodeBlur.bind(this);\n        this.handleZipcodeChange = this.handleZipcodeChange.bind(this);\n\n        this.handleStreetBlur = this.handleStreetBlur.bind(this);\n        this.handleStreetChange = this.handleStreetChange.bind(this);\n\n        this.handleCityBlur = this.handleCityBlur.bind(this);\n        this.handleCityChange = this.handleCityChange.bind(this);\n\n        this.handleStateBlur = this.handleStateBlur.bind(this);\n        this.handleStateChange = this.handleStateChange.bind(this);\n\n\n        this.handleAccount_nbrBlur = this.handleAccount_nbrBlur.bind(this);\n        this.handleAccount_nbrChange = this.handleAccount_nbrChange.bind(this);\n\n\n        this.handleFACTABlur = this.handleFACTABlur.bind(this);\n        this.handleFACTAChange = this.handleFACTAChange.bind(this);\n\n\n    }\n\n\n\n\n    renderToolTip = (props) => {\n        return(\n            <ReactTooltip className='tooltip-container' id={props.input} place=\"right\" type=\"dark\" effect=\"solid\">\n                 {props.tip}\n            </ReactTooltip>\n        )\n    };\n    \n\n\n    handleNameChange(e) {\n        this.setState({ name:e.target.value, isTouchedName:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n\n    handleNameBlur(e) {\n        let value = e.target.value; \n        let errorMessage\n\n        if (!value) {\n            errorMessage = 'Payer name is required.'\n        } \n\n        this.setState({nameError:errorMessage})\n    };\n\n\n\n    handleTinChange(e) {\n        this.setState({ Tin:e.target.value, isTouchedTin:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n\n    handleTinBlur(e) {\n        let value = e.target.value; \n        let errorMessage\n\n        if(value.length !== 9){\n            errorMessage = 'Payer TIN is not valid.  Must be 9 digits.'\n        }\n        if (!value) {\n            errorMessage = 'TIN is required.'\n        } \n\n        this.setState({tinError:errorMessage})\n    };\n\n\n\n    handleStreetChange(e) {\n        this.setState({ street:e.target.value, isTouchedStreet:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n\n    handleStreetBlur(e) {\n        let value = e.target.value; \n        let errorMessage\n\n        if (!value) {\n            errorMessage = 'Payer street address is required.'\n        } \n\n        this.setState({streetError:errorMessage})\n    };\n\n\n\n\n    handleCityChange(e) {\n        this.setState({ city:e.target.value, isTouchedCity:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n\n    handleCityBlur(e) {\n        let value = e.target.value; \n        let errorMessage\n\n        if (!value) {\n            errorMessage = 'Payer city is required.'\n        } \n\n        this.setState({cityError:errorMessage})\n    };\n\n\n\n    handleStateChange(e) {\n        this.setState({ state:e.target.value, isTouchedState:true }, () => {\n            this.props.updatePayer(this.state)\n        });\n    }\n\n    handleStateBlur(e) {\n        let value = e.target.value; \n        let errorMessage\n\n        if (!value) {\n            errorMessage = 'Payer state is required.'\n        } \n\n        this.setState({stateError:errorMessage})\n    };\n\n\n\n\n    camelCase(string){\n        return string.substring(0, 1).toUpperCase() + string.substring(1).toLowerCase()\n    }\n\n\n    handleZipcodeChange(e) {\n        let zip = e.target.value;\n        var zipURL = \"http://ziptasticapi.com/\" + zip\n\n        this.setState({isTouchedZip: true});\n\n        if (zip.length === 5) {\n            fetch(zipURL)\n            .then(response => response.json())\n            .then(data => {\n                document.getElementById('city').value = this.camelCase(data.city)\n                document.getElementById('state').value = data.state\n                this.setState({ \n                    city: this.camelCase(data.city),\n                    state: data.state,\n                    zipcode: zip,\n                });\n            }).then(() => {\n                this.props.updatePayer(this.state)\n            })\n        } \n    }\n\n    handleZipcodeBlur(e) {\n        let value = e.target.value; \n        let errorMessage\n\n\n        if(value.length !== 5){\n            errorMessage = 'Payer zipcode is not valid. Length must be 5 digits.'\n        }\n        if (!value) {\n            errorMessage = 'Payer zipcode is required.'\n        } \n\n        this.setState({zipcodeError:errorMessage})\n    };\n\n\n\n\n\n\n        \n    render() {            \n\n        return (\n        <div>\n            <div className=\"input-group\" align=\"left\">\n                <h4>Recipient Information</h4>\n            </div>\n\n\n\n\n\n\n\n\n\n            <div align=\"left\">\n                <label>Account Number</label>\n                <div className=\"form-group\" align=\"left\">\n    \t\t\t\t<div>\n                      <input type=\"text\" className=\"form-control\" id=\"inputRecipientAccount\" \n                        style={accountColor}\n                        onChange={(e) => this.handleFieldChange(e, \"account\")} \n                        onBlur={(e) => this.handleAccountBlur(e)}\n                        data-for='inputRecipientAccount' data-tip data-event='focus' data-event-off='blur'\n                        />\n    \t\t\t\t</div>\n                    {this.renderToolTip( {tip:\"Enter the recipient's account number.  This field is required if the FATCA checkbox is checked.\", input: \"inputRecipientAccount\"} )}\n    \t\t\t</div>\n                <FieldCheck3 isValid={this.state.isValidAccount} message={this.state.recipientErrors.account} />\n            </div>\n\n\n            <div align=\"left\" >\n                <label>FATCA</label>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\">\n                            <input type=\"checkbox\" aria-label=\"Checkbox for following text input\"\n                                onChange={(e) => this.handleFieldChange(e, \"FATCA\")} \n                                onBlur={(e) => this.handleFATCABlur(e)}  \n                            />\n                        </div>\n                    </div>\n                    <input type=\"readonly\" className=\"form-control\" id=\"chkbxFATCA\"\n                        data-for='inputFATCA' data-tip data-event='focus' data-event-off='blur'\n                    />\n                    {this.renderToolTip( {tip:\"Foreign Account Tax Compliance Act.  Check the checkbox if you are a U.S. payer that is reporting per Chapter 4 of Regulations section 1.1471-4(d)(2)(iii)(A), or if you are a Foreign Financial Institution (FFI) reporting payments to a U.S. account.\", input: \"inputFATCA\"} )}\n                </div>\n            </div>\n\n\n        </div>\n    )}\n}\n\n\nfunction mapStateToProps(state) {\n    return{\n        recipient: state.recipient\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        updateRecipient: updateRecipient\n    }, dispatch )\n}\n\nGetRecipientInfo = connect(mapStateToProps, mapDispatchToProps)(GetRecipientInfo);\n\nexport default GetRecipientInfo;\n\n\n\n"]},"metadata":{},"sourceType":"module"}